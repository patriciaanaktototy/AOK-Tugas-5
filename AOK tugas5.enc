{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# EXPLORATORY DATA ANALYSIS"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exploratory Data Analysis memungkinkan analyst memahami isi data yang digunakan, mulai dari distribusi, frekuensi, korelasi dan lainnya"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<script>\n",
       "code_show=true; \n",
       "function code_toggle() {\n",
       " if (code_show){\n",
       " $('div.input').hide();\n",
       " } else {\n",
       " $('div.input').show();\n",
       " }\n",
       " code_show = !code_show\n",
       "} \n",
       "$( document ).ready(code_toggle);\n",
       "</script>\n",
       "<form action=\"javascript:code_toggle()\"><input type=\"submit\" value=\"Click here to toggle on/off the raw code.\"></form>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from IPython.display import HTML\n",
    "\n",
    "HTML('''<script>\n",
    "code_show=true; \n",
    "function code_toggle() {\n",
    " if (code_show){\n",
    " $('div.input').hide();\n",
    " } else {\n",
    " $('div.input').show();\n",
    " }\n",
    " code_show = !code_show\n",
    "} \n",
    "$( document ).ready(code_toggle);\n",
    "</script>\n",
    "<form action=\"javascript:code_toggle()\"><input type=\"submit\" value=\"Click here to toggle on/off the raw code.\"></form>''')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# masukkan library yang akan kita gunakan\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# melakukan pembacaan pada dataset dalam format \n",
    "data = pd.read_csv('AOK data baru.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Membuat 10 data tampilan pertama"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia</th>\n",
       "      <th>Tahukah bahwa Microsoft Office pernah merilis Office online</th>\n",
       "      <th>Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya</th>\n",
       "      <th>Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya</th>\n",
       "      <th>Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang</th>\n",
       "      <th>Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word</th>\n",
       "      <th>Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual</th>\n",
       "      <th>Seberapa banyak program office selain Microsoft office</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Responded 1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Responded 2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Responded 3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Responded 4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Responded 5</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Responded 6</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Responded 7</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>Responded 8</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Responded 9</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>Responded 10</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Unnamed: 0  \\\n",
       "0   Responded 1   \n",
       "1   Responded 2   \n",
       "2   Responded 3   \n",
       "3   Responded 4   \n",
       "4   Responded 5   \n",
       "5   Responded 6   \n",
       "6   Responded 7   \n",
       "7   Responded 8   \n",
       "8   Responded 9   \n",
       "9  Responded 10   \n",
       "\n",
       "   Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia  \\\n",
       "0                                                  2                                                  \n",
       "1                                                  1                                                  \n",
       "2                                                  1                                                  \n",
       "3                                                  1                                                  \n",
       "4                                                  5                                                  \n",
       "5                                                  2                                                  \n",
       "6                                                  1                                                  \n",
       "7                                                  2                                                  \n",
       "8                                                  2                                                  \n",
       "9                                                  1                                                  \n",
       "\n",
       "   Tahukah bahwa Microsoft Office pernah merilis Office online  \\\n",
       "0                                                  2             \n",
       "1                                                  2             \n",
       "2                                                  2             \n",
       "3                                                  2             \n",
       "4                                                  1             \n",
       "5                                                  1             \n",
       "6                                                  4             \n",
       "7                                                  2             \n",
       "8                                                  4             \n",
       "9                                                  2             \n",
       "\n",
       "   Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya  \\\n",
       "0                                                  3                                              \n",
       "1                                                  2                                              \n",
       "2                                                  2                                              \n",
       "3                                                  2                                              \n",
       "4                                                  2                                              \n",
       "5                                                  2                                              \n",
       "6                                                  2                                              \n",
       "7                                                  3                                              \n",
       "8                                                  2                                              \n",
       "9                                                  1                                              \n",
       "\n",
       "   Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya  \\\n",
       "0                                                  2                                                                        \n",
       "1                                                  2                                                                        \n",
       "2                                                  2                                                                        \n",
       "3                                                  2                                                                        \n",
       "4                                                  3                                                                        \n",
       "5                                                  1                                                                        \n",
       "6                                                  2                                                                        \n",
       "7                                                  3                                                                        \n",
       "8                                                  2                                                                        \n",
       "9                                                  3                                                                        \n",
       "\n",
       "   Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang  \\\n",
       "0                                                  2                                                \n",
       "1                                                  2                                                \n",
       "2                                                  2                                                \n",
       "3                                                  1                                                \n",
       "4                                                  4                                                \n",
       "5                                                  3                                                \n",
       "6                                                  2                                                \n",
       "7                                                  2                                                \n",
       "8                                                  3                                                \n",
       "9                                                  2                                                \n",
       "\n",
       "   Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word  \\\n",
       "0                                                  4                                                   \n",
       "1                                                  1                                                   \n",
       "2                                                  1                                                   \n",
       "3                                                  2                                                   \n",
       "4                                                  1                                                   \n",
       "5                                                  2                                                   \n",
       "6                                                  1                                                   \n",
       "7                                                  2                                                   \n",
       "8                                                  2                                                   \n",
       "9                                                  2                                                   \n",
       "\n",
       "   Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual  \\\n",
       "0                                                  2                                           \n",
       "1                                                  1                                           \n",
       "2                                                  1                                           \n",
       "3                                                  2                                           \n",
       "4                                                  1                                           \n",
       "5                                                  2                                           \n",
       "6                                                  2                                           \n",
       "7                                                  2                                           \n",
       "8                                                  2                                           \n",
       "9                                                  1                                           \n",
       "\n",
       "   Seberapa banyak program office selain Microsoft office  \n",
       "0                                                  4       \n",
       "1                                                  3       \n",
       "2                                                  2       \n",
       "3                                                  2       \n",
       "4                                                  2       \n",
       "5                                                  2       \n",
       "6                                                  4       \n",
       "7                                                  2       \n",
       "8                                                  2       \n",
       "9                                                  2       "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Melihat fitur yang disediakan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Unnamed: 0',\n",
       "       'Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia',\n",
       "       'Tahukah bahwa Microsoft Office pernah merilis Office online',\n",
       "       'Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya',\n",
       "       'Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya',\n",
       "       'Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang',\n",
       "       'Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word',\n",
       "       'Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual',\n",
       "       'Seberapa banyak program office selain Microsoft office'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Deskripsi data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Menampilkan perhitungan dalam jumlah data, rata-rata, standard deviasi, nilai minimum dan maksimum."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia</th>\n",
       "      <th>Tahukah bahwa Microsoft Office pernah merilis Office online</th>\n",
       "      <th>Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya</th>\n",
       "      <th>Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya</th>\n",
       "      <th>Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang</th>\n",
       "      <th>Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word</th>\n",
       "      <th>Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual</th>\n",
       "      <th>Seberapa banyak program office selain Microsoft office</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>528.000000</td>\n",
       "      <td>528.000000</td>\n",
       "      <td>528.000000</td>\n",
       "      <td>528.000000</td>\n",
       "      <td>528.000000</td>\n",
       "      <td>528.000000</td>\n",
       "      <td>528.000000</td>\n",
       "      <td>528.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>1.827652</td>\n",
       "      <td>3.206439</td>\n",
       "      <td>2.140152</td>\n",
       "      <td>2.547348</td>\n",
       "      <td>2.070076</td>\n",
       "      <td>2.034091</td>\n",
       "      <td>1.732955</td>\n",
       "      <td>2.265152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>0.973380</td>\n",
       "      <td>1.229383</td>\n",
       "      <td>0.790874</td>\n",
       "      <td>0.758026</td>\n",
       "      <td>0.836101</td>\n",
       "      <td>0.986999</td>\n",
       "      <td>0.735836</td>\n",
       "      <td>0.856805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia  \\\n",
       "count                                         528.000000                                                  \n",
       "mean                                            1.827652                                                  \n",
       "std                                             0.973380                                                  \n",
       "min                                             1.000000                                                  \n",
       "25%                                             1.000000                                                  \n",
       "50%                                             2.000000                                                  \n",
       "75%                                             2.000000                                                  \n",
       "max                                             5.000000                                                  \n",
       "\n",
       "       Tahukah bahwa Microsoft Office pernah merilis Office online  \\\n",
       "count                                         528.000000             \n",
       "mean                                            3.206439             \n",
       "std                                             1.229383             \n",
       "min                                             1.000000             \n",
       "25%                                             2.000000             \n",
       "50%                                             3.000000             \n",
       "75%                                             4.000000             \n",
       "max                                             5.000000             \n",
       "\n",
       "       Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya  \\\n",
       "count                                         528.000000                                              \n",
       "mean                                            2.140152                                              \n",
       "std                                             0.790874                                              \n",
       "min                                             1.000000                                              \n",
       "25%                                             2.000000                                              \n",
       "50%                                             2.000000                                              \n",
       "75%                                             2.000000                                              \n",
       "max                                             5.000000                                              \n",
       "\n",
       "       Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya  \\\n",
       "count                                         528.000000                                                                        \n",
       "mean                                            2.547348                                                                        \n",
       "std                                             0.758026                                                                        \n",
       "min                                             1.000000                                                                        \n",
       "25%                                             2.000000                                                                        \n",
       "50%                                             3.000000                                                                        \n",
       "75%                                             3.000000                                                                        \n",
       "max                                             5.000000                                                                        \n",
       "\n",
       "       Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang  \\\n",
       "count                                         528.000000                                                \n",
       "mean                                            2.070076                                                \n",
       "std                                             0.836101                                                \n",
       "min                                             1.000000                                                \n",
       "25%                                             2.000000                                                \n",
       "50%                                             2.000000                                                \n",
       "75%                                             2.000000                                                \n",
       "max                                             5.000000                                                \n",
       "\n",
       "       Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word  \\\n",
       "count                                         528.000000                                                   \n",
       "mean                                            2.034091                                                   \n",
       "std                                             0.986999                                                   \n",
       "min                                             1.000000                                                   \n",
       "25%                                             1.000000                                                   \n",
       "50%                                             2.000000                                                   \n",
       "75%                                             2.000000                                                   \n",
       "max                                             5.000000                                                   \n",
       "\n",
       "       Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual  \\\n",
       "count                                         528.000000                                           \n",
       "mean                                            1.732955                                           \n",
       "std                                             0.735836                                           \n",
       "min                                             1.000000                                           \n",
       "25%                                             1.000000                                           \n",
       "50%                                             2.000000                                           \n",
       "75%                                             2.000000                                           \n",
       "max                                             5.000000                                           \n",
       "\n",
       "       Seberapa banyak program office selain Microsoft office  \n",
       "count                                         528.000000       \n",
       "mean                                            2.265152       \n",
       "std                                             0.856805       \n",
       "min                                             1.000000       \n",
       "25%                                             2.000000       \n",
       "50%                                             2.000000       \n",
       "75%                                             3.000000       \n",
       "max                                             5.000000       "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Menghitung Nilai Kolerasi"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Menggunakan Metode Kendall "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia</th>\n",
       "      <th>Tahukah bahwa Microsoft Office pernah merilis Office online</th>\n",
       "      <th>Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya</th>\n",
       "      <th>Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya</th>\n",
       "      <th>Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang</th>\n",
       "      <th>Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word</th>\n",
       "      <th>Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual</th>\n",
       "      <th>Seberapa banyak program office selain Microsoft office</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.165510</td>\n",
       "      <td>0.214096</td>\n",
       "      <td>0.107145</td>\n",
       "      <td>0.152589</td>\n",
       "      <td>0.135786</td>\n",
       "      <td>0.148038</td>\n",
       "      <td>0.022975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Tahukah bahwa Microsoft Office pernah merilis Office online</td>\n",
       "      <td>0.165510</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.094583</td>\n",
       "      <td>0.141886</td>\n",
       "      <td>0.131623</td>\n",
       "      <td>0.120735</td>\n",
       "      <td>0.112071</td>\n",
       "      <td>0.110384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya</td>\n",
       "      <td>0.214096</td>\n",
       "      <td>0.094583</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.276815</td>\n",
       "      <td>0.137213</td>\n",
       "      <td>0.161460</td>\n",
       "      <td>0.199370</td>\n",
       "      <td>0.056078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya</td>\n",
       "      <td>0.107145</td>\n",
       "      <td>0.141886</td>\n",
       "      <td>0.276815</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.133321</td>\n",
       "      <td>0.110256</td>\n",
       "      <td>0.132318</td>\n",
       "      <td>0.144016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang</td>\n",
       "      <td>0.152589</td>\n",
       "      <td>0.131623</td>\n",
       "      <td>0.137213</td>\n",
       "      <td>0.133321</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.445398</td>\n",
       "      <td>0.303389</td>\n",
       "      <td>0.186349</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word</td>\n",
       "      <td>0.135786</td>\n",
       "      <td>0.120735</td>\n",
       "      <td>0.161460</td>\n",
       "      <td>0.110256</td>\n",
       "      <td>0.445398</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.333275</td>\n",
       "      <td>0.124039</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual</td>\n",
       "      <td>0.148038</td>\n",
       "      <td>0.112071</td>\n",
       "      <td>0.199370</td>\n",
       "      <td>0.132318</td>\n",
       "      <td>0.303389</td>\n",
       "      <td>0.333275</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.207950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Seberapa banyak program office selain Microsoft office</td>\n",
       "      <td>0.022975</td>\n",
       "      <td>0.110384</td>\n",
       "      <td>0.056078</td>\n",
       "      <td>0.144016</td>\n",
       "      <td>0.186349</td>\n",
       "      <td>0.124039</td>\n",
       "      <td>0.207950</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia  \\\n",
       "Pada saat ini, microsoft office merupakan aplik...                                           1.000000                                                  \n",
       "Tahukah bahwa Microsoft Office pernah merilis O...                                           0.165510                                                  \n",
       "Microsoft Office merupakan yang paling berkuali...                                           0.214096                                                  \n",
       "Harga Office sofware 2019 versi Home and Studen...                                           0.107145                                                  \n",
       "Seberapa meningkatnya kemampuan Microsoft Offic...                                           0.152589                                                  \n",
       "Seberapa meningkatnya pengetahuan anda tentang ...                                           0.135786                                                  \n",
       "Seberapa efisienkah mengolah pembukuan dengan M...                                           0.148038                                                  \n",
       "Seberapa banyak program office selain Microsoft...                                           0.022975                                                  \n",
       "\n",
       "                                                    Tahukah bahwa Microsoft Office pernah merilis Office online  \\\n",
       "Pada saat ini, microsoft office merupakan aplik...                                           0.165510             \n",
       "Tahukah bahwa Microsoft Office pernah merilis O...                                           1.000000             \n",
       "Microsoft Office merupakan yang paling berkuali...                                           0.094583             \n",
       "Harga Office sofware 2019 versi Home and Studen...                                           0.141886             \n",
       "Seberapa meningkatnya kemampuan Microsoft Offic...                                           0.131623             \n",
       "Seberapa meningkatnya pengetahuan anda tentang ...                                           0.120735             \n",
       "Seberapa efisienkah mengolah pembukuan dengan M...                                           0.112071             \n",
       "Seberapa banyak program office selain Microsoft...                                           0.110384             \n",
       "\n",
       "                                                    Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya  \\\n",
       "Pada saat ini, microsoft office merupakan aplik...                                           0.214096                                              \n",
       "Tahukah bahwa Microsoft Office pernah merilis O...                                           0.094583                                              \n",
       "Microsoft Office merupakan yang paling berkuali...                                           1.000000                                              \n",
       "Harga Office sofware 2019 versi Home and Studen...                                           0.276815                                              \n",
       "Seberapa meningkatnya kemampuan Microsoft Offic...                                           0.137213                                              \n",
       "Seberapa meningkatnya pengetahuan anda tentang ...                                           0.161460                                              \n",
       "Seberapa efisienkah mengolah pembukuan dengan M...                                           0.199370                                              \n",
       "Seberapa banyak program office selain Microsoft...                                           0.056078                                              \n",
       "\n",
       "                                                    Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya  \\\n",
       "Pada saat ini, microsoft office merupakan aplik...                                           0.107145                                                                        \n",
       "Tahukah bahwa Microsoft Office pernah merilis O...                                           0.141886                                                                        \n",
       "Microsoft Office merupakan yang paling berkuali...                                           0.276815                                                                        \n",
       "Harga Office sofware 2019 versi Home and Studen...                                           1.000000                                                                        \n",
       "Seberapa meningkatnya kemampuan Microsoft Offic...                                           0.133321                                                                        \n",
       "Seberapa meningkatnya pengetahuan anda tentang ...                                           0.110256                                                                        \n",
       "Seberapa efisienkah mengolah pembukuan dengan M...                                           0.132318                                                                        \n",
       "Seberapa banyak program office selain Microsoft...                                           0.144016                                                                        \n",
       "\n",
       "                                                    Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang  \\\n",
       "Pada saat ini, microsoft office merupakan aplik...                                           0.152589                                                \n",
       "Tahukah bahwa Microsoft Office pernah merilis O...                                           0.131623                                                \n",
       "Microsoft Office merupakan yang paling berkuali...                                           0.137213                                                \n",
       "Harga Office sofware 2019 versi Home and Studen...                                           0.133321                                                \n",
       "Seberapa meningkatnya kemampuan Microsoft Offic...                                           1.000000                                                \n",
       "Seberapa meningkatnya pengetahuan anda tentang ...                                           0.445398                                                \n",
       "Seberapa efisienkah mengolah pembukuan dengan M...                                           0.303389                                                \n",
       "Seberapa banyak program office selain Microsoft...                                           0.186349                                                \n",
       "\n",
       "                                                    Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word  \\\n",
       "Pada saat ini, microsoft office merupakan aplik...                                           0.135786                                                   \n",
       "Tahukah bahwa Microsoft Office pernah merilis O...                                           0.120735                                                   \n",
       "Microsoft Office merupakan yang paling berkuali...                                           0.161460                                                   \n",
       "Harga Office sofware 2019 versi Home and Studen...                                           0.110256                                                   \n",
       "Seberapa meningkatnya kemampuan Microsoft Offic...                                           0.445398                                                   \n",
       "Seberapa meningkatnya pengetahuan anda tentang ...                                           1.000000                                                   \n",
       "Seberapa efisienkah mengolah pembukuan dengan M...                                           0.333275                                                   \n",
       "Seberapa banyak program office selain Microsoft...                                           0.124039                                                   \n",
       "\n",
       "                                                    Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual  \\\n",
       "Pada saat ini, microsoft office merupakan aplik...                                           0.148038                                           \n",
       "Tahukah bahwa Microsoft Office pernah merilis O...                                           0.112071                                           \n",
       "Microsoft Office merupakan yang paling berkuali...                                           0.199370                                           \n",
       "Harga Office sofware 2019 versi Home and Studen...                                           0.132318                                           \n",
       "Seberapa meningkatnya kemampuan Microsoft Offic...                                           0.303389                                           \n",
       "Seberapa meningkatnya pengetahuan anda tentang ...                                           0.333275                                           \n",
       "Seberapa efisienkah mengolah pembukuan dengan M...                                           1.000000                                           \n",
       "Seberapa banyak program office selain Microsoft...                                           0.207950                                           \n",
       "\n",
       "                                                    Seberapa banyak program office selain Microsoft office  \n",
       "Pada saat ini, microsoft office merupakan aplik...                                           0.022975       \n",
       "Tahukah bahwa Microsoft Office pernah merilis O...                                           0.110384       \n",
       "Microsoft Office merupakan yang paling berkuali...                                           0.056078       \n",
       "Harga Office sofware 2019 versi Home and Studen...                                           0.144016       \n",
       "Seberapa meningkatnya kemampuan Microsoft Offic...                                           0.186349       \n",
       "Seberapa meningkatnya pengetahuan anda tentang ...                                           0.124039       \n",
       "Seberapa efisienkah mengolah pembukuan dengan M...                                           0.207950       \n",
       "Seberapa banyak program office selain Microsoft...                                           1.000000       "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "correlations = data.corr(method =\"kendall\")\n",
    "correlations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(*args, **kw)>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1440 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# correlation map\n",
    "# higher correlations are brighter\n",
    "f,ax = plt.subplots(figsize=(20,20))\n",
    "sns.heatmap(correlations, annot=True, linewidths=.5, fmt='.3f', ax=ax)\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Koefisien korelasi adalah nilai yang menunjukkan kuat atau tidaknya hubungan linier antarvariabel. Contohnya pertanyaan :\n",
    "\n",
    "    1.\tPertanyaan “Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang?” dengan pertanyaan “Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang “. Pada pertanyaan ini memiliki skor korelasi 0,445,menurut seorang peneliti yaitu Jonathan Sarwono,dengan nilai skor angka segitu berarti memiliki hubungan yang cukup kuat.\n",
    "    2.\tPertanyaan \" Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya ?\" dengan pertanyaan \" Seberapa banyak program office selain Microsoft office?\" memiliki hubungan sangat lemah dengan niali koefesien korelasi sebesar 0,056. \n",
    "\n",
    "Jadi dapat disimpulkan bahwa, Korelasi cukup kuat menunjukkan hubungan yang kuat. Sedangkan korelasi lemah menunjukkan hubungan yang kurang."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Uji Test Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Membuat uji data dengan test Alpha cronbach, T-test, dan Principal Component Analysis (PCA) menggunakan bahasa R"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Uji Data dengan Alpha Crochbach"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "options(warn=-1)\n",
    "mydata<-read.csv('AOK data baru.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Responded</th><th scope=col>Q1</th><th scope=col>Q2</th><th scope=col>Q3</th><th scope=col>Q4</th><th scope=col>Q5</th><th scope=col>Q6</th><th scope=col>Q7</th><th scope=col>Q8</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>Responded 1</td><td>2          </td><td>2          </td><td>3          </td><td>2          </td><td>2          </td><td>4          </td><td>2          </td><td>4          </td></tr>\n",
       "\t<tr><td>Responded 2</td><td>1          </td><td>2          </td><td>2          </td><td>2          </td><td>2          </td><td>1          </td><td>1          </td><td>3          </td></tr>\n",
       "\t<tr><td>Responded 3</td><td>1          </td><td>2          </td><td>2          </td><td>2          </td><td>2          </td><td>1          </td><td>1          </td><td>2          </td></tr>\n",
       "\t<tr><td>Responded 4</td><td>1          </td><td>2          </td><td>2          </td><td>2          </td><td>1          </td><td>2          </td><td>2          </td><td>2          </td></tr>\n",
       "\t<tr><td>Responded 5</td><td>5          </td><td>1          </td><td>2          </td><td>3          </td><td>4          </td><td>1          </td><td>1          </td><td>2          </td></tr>\n",
       "\t<tr><td>Responded 6</td><td>2          </td><td>1          </td><td>2          </td><td>1          </td><td>3          </td><td>2          </td><td>2          </td><td>2          </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lllllllll}\n",
       " Responded & Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7 & Q8\\\\\n",
       "\\hline\n",
       "\t Responded 1 & 2           & 2           & 3           & 2           & 2           & 4           & 2           & 4          \\\\\n",
       "\t Responded 2 & 1           & 2           & 2           & 2           & 2           & 1           & 1           & 3          \\\\\n",
       "\t Responded 3 & 1           & 2           & 2           & 2           & 2           & 1           & 1           & 2          \\\\\n",
       "\t Responded 4 & 1           & 2           & 2           & 2           & 1           & 2           & 2           & 2          \\\\\n",
       "\t Responded 5 & 5           & 1           & 2           & 3           & 4           & 1           & 1           & 2          \\\\\n",
       "\t Responded 6 & 2           & 1           & 2           & 1           & 3           & 2           & 2           & 2          \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "| Responded | Q1 | Q2 | Q3 | Q4 | Q5 | Q6 | Q7 | Q8 |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| Responded 1 | 2           | 2           | 3           | 2           | 2           | 4           | 2           | 4           |\n",
       "| Responded 2 | 1           | 2           | 2           | 2           | 2           | 1           | 1           | 3           |\n",
       "| Responded 3 | 1           | 2           | 2           | 2           | 2           | 1           | 1           | 2           |\n",
       "| Responded 4 | 1           | 2           | 2           | 2           | 1           | 2           | 2           | 2           |\n",
       "| Responded 5 | 5           | 1           | 2           | 3           | 4           | 1           | 1           | 2           |\n",
       "| Responded 6 | 2           | 1           | 2           | 1           | 3           | 2           | 2           | 2           |\n",
       "\n"
      ],
      "text/plain": [
       "  Responded   Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8\n",
       "1 Responded 1 2  2  3  2  2  4  2  4 \n",
       "2 Responded 2 1  2  2  2  2  1  1  3 \n",
       "3 Responded 3 1  2  2  2  2  1  1  2 \n",
       "4 Responded 4 1  2  2  2  1  2  2  2 \n",
       "5 Responded 5 5  1  2  3  4  1  1  2 \n",
       "6 Responded 6 2  1  2  1  3  2  2  2 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "head(mydata)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "library('psych')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "Reliability analysis   \n",
       "Call: alpha(x = mydata)\n",
       "\n",
       "  raw_alpha std.alpha G6(smc) average_r S/N   ase mean   sd median_r\n",
       "      0.61      0.63    0.63      0.18 1.7 0.025  2.2 0.47     0.15\n",
       "\n",
       " lower alpha upper     95% confidence boundaries\n",
       "0.56 0.61 0.66 \n",
       "\n",
       " Reliability if an item is dropped:\n",
       "   raw_alpha std.alpha G6(smc) average_r S/N alpha se  var.r med.r\n",
       "Q1      0.61      0.63    0.61      0.19 1.7    0.026 0.0104  0.16\n",
       "Q2      0.60      0.61    0.61      0.18 1.6    0.026 0.0132  0.15\n",
       "Q3      0.59      0.60    0.59      0.18 1.5    0.027 0.0109  0.15\n",
       "Q4      0.59      0.60    0.60      0.18 1.5    0.027 0.0124  0.15\n",
       "Q5      0.55      0.57    0.56      0.16 1.3    0.030 0.0081  0.15\n",
       "Q6      0.56      0.58    0.56      0.16 1.4    0.029 0.0071  0.15\n",
       "Q7      0.56      0.57    0.56      0.16 1.3    0.029 0.0084  0.15\n",
       "Q8      0.60      0.62    0.61      0.19 1.6    0.026 0.0103  0.15\n",
       "\n",
       " Item statistics \n",
       "     n raw.r std.r r.cor r.drop mean   sd\n",
       "Q1 528  0.47  0.44  0.29   0.23  1.8 0.97\n",
       "Q2 528  0.56  0.48  0.34   0.28  3.2 1.23\n",
       "Q3 528  0.48  0.51  0.40   0.30  2.1 0.79\n",
       "Q4 528  0.48  0.51  0.39   0.30  2.5 0.76\n",
       "Q5 528  0.59  0.61  0.54   0.42  2.1 0.84\n",
       "Q6 528  0.60  0.59  0.53   0.39  2.0 0.99\n",
       "Q7 528  0.57  0.60  0.54   0.41  1.7 0.74\n",
       "Q8 528  0.45  0.47  0.32   0.24  2.3 0.86\n",
       "\n",
       "Non missing response frequency for each item\n",
       "      1    2    3    4    5 miss\n",
       "Q1 0.40 0.50 0.03 0.02 0.05    0\n",
       "Q2 0.05 0.32 0.16 0.27 0.18    0\n",
       "Q3 0.16 0.62 0.17 0.04 0.02    0\n",
       "Q4 0.06 0.43 0.43 0.07 0.01    0\n",
       "Q5 0.23 0.54 0.15 0.07 0.01    0\n",
       "Q6 0.30 0.51 0.05 0.11 0.02    0\n",
       "Q7 0.41 0.48 0.09 0.02 0.01    0\n",
       "Q8 0.14 0.57 0.18 0.10 0.01    0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia\"\n",
      "[1] \"Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online\"\n",
      "[1] \"Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya\"\n",
      "[1] \"Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya\"\n",
      "[1] \"Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang\"\n",
      "[1] \"Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word\"\n",
      "[1] \"Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual\"\n",
      "[1] \"Q8 = Seberapa banyak program office selain Microsoft office\"\n"
     ]
    }
   ],
   "source": [
    "alpha(mydata)\n",
    "print('Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia')\n",
    "print('Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online')\n",
    "print('Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya')\n",
    "print('Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya')\n",
    "print('Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang')\n",
    "print('Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word')\n",
    "print('Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual')\n",
    "print('Q8 = Seberapa banyak program office selain Microsoft office')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Uji Data dengan T-test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "x<-read.csv('AOK data baru.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Responded</th><th scope=col>Q1</th><th scope=col>Q2</th><th scope=col>Q3</th><th scope=col>Q4</th><th scope=col>Q5</th><th scope=col>Q6</th><th scope=col>Q7</th><th scope=col>Q8</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>Responded 1</td><td>2          </td><td>2          </td><td>3          </td><td>2          </td><td>2          </td><td>4          </td><td>2          </td><td>4          </td></tr>\n",
       "\t<tr><td>Responded 2</td><td>1          </td><td>2          </td><td>2          </td><td>2          </td><td>2          </td><td>1          </td><td>1          </td><td>3          </td></tr>\n",
       "\t<tr><td>Responded 3</td><td>1          </td><td>2          </td><td>2          </td><td>2          </td><td>2          </td><td>1          </td><td>1          </td><td>2          </td></tr>\n",
       "\t<tr><td>Responded 4</td><td>1          </td><td>2          </td><td>2          </td><td>2          </td><td>1          </td><td>2          </td><td>2          </td><td>2          </td></tr>\n",
       "\t<tr><td>Responded 5</td><td>5          </td><td>1          </td><td>2          </td><td>3          </td><td>4          </td><td>1          </td><td>1          </td><td>2          </td></tr>\n",
       "\t<tr><td>Responded 6</td><td>2          </td><td>1          </td><td>2          </td><td>1          </td><td>3          </td><td>2          </td><td>2          </td><td>2          </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lllllllll}\n",
       " Responded & Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7 & Q8\\\\\n",
       "\\hline\n",
       "\t Responded 1 & 2           & 2           & 3           & 2           & 2           & 4           & 2           & 4          \\\\\n",
       "\t Responded 2 & 1           & 2           & 2           & 2           & 2           & 1           & 1           & 3          \\\\\n",
       "\t Responded 3 & 1           & 2           & 2           & 2           & 2           & 1           & 1           & 2          \\\\\n",
       "\t Responded 4 & 1           & 2           & 2           & 2           & 1           & 2           & 2           & 2          \\\\\n",
       "\t Responded 5 & 5           & 1           & 2           & 3           & 4           & 1           & 1           & 2          \\\\\n",
       "\t Responded 6 & 2           & 1           & 2           & 1           & 3           & 2           & 2           & 2          \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "| Responded | Q1 | Q2 | Q3 | Q4 | Q5 | Q6 | Q7 | Q8 |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| Responded 1 | 2           | 2           | 3           | 2           | 2           | 4           | 2           | 4           |\n",
       "| Responded 2 | 1           | 2           | 2           | 2           | 2           | 1           | 1           | 3           |\n",
       "| Responded 3 | 1           | 2           | 2           | 2           | 2           | 1           | 1           | 2           |\n",
       "| Responded 4 | 1           | 2           | 2           | 2           | 1           | 2           | 2           | 2           |\n",
       "| Responded 5 | 5           | 1           | 2           | 3           | 4           | 1           | 1           | 2           |\n",
       "| Responded 6 | 2           | 1           | 2           | 1           | 3           | 2           | 2           | 2           |\n",
       "\n"
      ],
      "text/plain": [
       "  Responded   Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8\n",
       "1 Responded 1 2  2  3  2  2  4  2  4 \n",
       "2 Responded 2 1  2  2  2  2  1  1  3 \n",
       "3 Responded 3 1  2  2  2  2  1  1  2 \n",
       "4 Responded 4 1  2  2  2  1  2  2  2 \n",
       "5 Responded 5 5  1  2  3  4  1  1  2 \n",
       "6 Responded 6 2  1  2  1  3  2  2  2 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "head(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q1'</li>\n",
       "\t<li>'Q2'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q1'\n",
       "\\item 'Q2'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q1'\n",
       "2. 'Q2'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q1\" \"Q2\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following objects are masked from mydata:\n",
      "\n",
      "    Q1, Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 19):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 20):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 21):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 22):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 23):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 24):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 25):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 26):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 27):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 28):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 29):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 30):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 31):\n",
      "\n",
      "    Q1, Q2\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia\"\n",
      "[1] \"Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia')\n",
    "print('Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q1'</li>\n",
       "\t<li>'Q3'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q1'\n",
       "\\item 'Q3'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q1'\n",
       "2. 'Q3'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q1\" \"Q3\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q1\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia\"\n",
      "[1] \"Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia')\n",
    "print('Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q1'</li>\n",
       "\t<li>'Q4'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q1'\n",
       "\\item 'Q4'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q1'\n",
       "2. 'Q4'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q1\" \"Q4\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q1\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia\"\n",
      "[1] \"Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia')\n",
    "print('Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q1'</li>\n",
       "\t<li>'Q5'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q1'\n",
       "\\item 'Q5'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q1'\n",
       "2. 'Q5'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q1\" \"Q5\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q1\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia\"\n",
      "[1] \"Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia')\n",
    "print('Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q1'</li>\n",
       "\t<li>'Q6'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q1'\n",
       "\\item 'Q6'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q1'\n",
       "2. 'Q6'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q1\" \"Q6\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q1\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia\"\n",
      "[1] \"Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia')\n",
    "print('Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q1'</li>\n",
       "\t<li>'Q7'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q1'\n",
       "\\item 'Q7'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q1'\n",
       "2. 'Q7'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q1\" \"Q7\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q1\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia\"\n",
      "[1] \"Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia')\n",
    "print('Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q1'</li>\n",
       "\t<li>'Q8'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q1'\n",
       "\\item 'Q8'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q1'\n",
       "2. 'Q8'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q1\" \"Q8\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q1\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q1\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia\"\n",
      "[1] \"Q8 = Seberapa banyak program office selain Microsoft office\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q1 = Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia')\n",
    "print('Q8 = Seberapa banyak program office selain Microsoft office')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q2'</li>\n",
       "\t<li>'Q3'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q2'\n",
       "\\item 'Q3'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q2'\n",
       "2. 'Q3'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q2\" \"Q3\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 9):\n",
      "\n",
      "    Q2\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online\"\n",
      "[1] \"Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online')\n",
    "print('Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q2'</li>\n",
       "\t<li>'Q4'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q2'\n",
       "\\item 'Q4'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q2'\n",
       "2. 'Q4'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q2\" \"Q4\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 10):\n",
      "\n",
      "    Q2\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online\"\n",
      "[1] \"Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online')\n",
    "print('Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q2'</li>\n",
       "\t<li>'Q5'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q2'\n",
       "\\item 'Q5'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q2'\n",
       "2. 'Q5'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q2\" \"Q5\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 11):\n",
      "\n",
      "    Q2\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online\"\n",
      "[1] \"Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online')\n",
    "print('Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q2'</li>\n",
       "\t<li>'Q6'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q2'\n",
       "\\item 'Q6'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q2'\n",
       "2. 'Q6'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q2\" \"Q6\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 12):\n",
      "\n",
      "    Q2\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online\"\n",
      "[1] \"Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online')\n",
    "print('Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q2'</li>\n",
       "\t<li>'Q7'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q2'\n",
       "\\item 'Q7'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q2'\n",
       "2. 'Q7'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q2\" \"Q7\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 13):\n",
      "\n",
      "    Q2\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online\"\n",
      "[1] \"Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online')\n",
    "print('Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q2'</li>\n",
       "\t<li>'Q8'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q2'\n",
       "\\item 'Q8'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q2'\n",
       "2. 'Q8'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q2\" \"Q8\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q2\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 14):\n",
      "\n",
      "    Q2\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online\"\n",
      "[1] \"Q8 = Seberapa banyak program office selain Microsoft office\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q2 = Tahukah bahwa Microsoft Office pernah merilis Office online')\n",
    "print('Q8 = Seberapa banyak program office selain Microsoft office')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q3'</li>\n",
       "\t<li>'Q4'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q3'\n",
       "\\item 'Q4'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q3'\n",
       "2. 'Q4'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q3\" \"Q4\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 13):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 14):\n",
      "\n",
      "    Q3\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya\"\n",
      "[1] \"Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya')\n",
    "print('Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q3'</li>\n",
       "\t<li>'Q5'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q3'\n",
       "\\item 'Q5'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q3'\n",
       "2. 'Q5'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q3\" \"Q5\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 9):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 13):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 15):\n",
      "\n",
      "    Q3\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya\"\n",
      "[1] \"Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya')\n",
    "print('Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q3'</li>\n",
       "\t<li>'Q6'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q3'\n",
       "\\item 'Q6'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q3'\n",
       "2. 'Q6'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q3\" \"Q6\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 10):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 13):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 16):\n",
      "\n",
      "    Q3\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya\"\n",
      "[1] \"Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya')\n",
    "print('Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q3'</li>\n",
       "\t<li>'Q7'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q3'\n",
       "\\item 'Q7'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q3'\n",
       "2. 'Q7'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q3\" \"Q7\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 11):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 13):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 17):\n",
      "\n",
      "    Q3\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya\"\n",
      "[1] \"Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya')\n",
    "print('Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q3'</li>\n",
       "\t<li>'Q8'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q3'\n",
       "\\item 'Q8'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q3'\n",
       "2. 'Q8'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q3\" \"Q8\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 12):\n",
      "\n",
      "    Q3\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 13):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 18):\n",
      "\n",
      "    Q3\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya\"\n",
      "[1] \"Q8 = Seberapa banyak program office selain Microsoft office\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q3 = Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya')\n",
    "print('Q8 = Seberapa banyak program office selain Microsoft office')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q4'</li>\n",
       "\t<li>'Q5'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q4'\n",
       "\\item 'Q5'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q4'\n",
       "2. 'Q5'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q4\" \"Q5\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 11):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 12):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 17):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 18):\n",
      "\n",
      "    Q4\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya\"\n",
      "[1] \"Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya')\n",
    "print('Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q4'</li>\n",
       "\t<li>'Q6'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q4'\n",
       "\\item 'Q6'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q4'\n",
       "2. 'Q6'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q4\" \"Q6\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 11):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 13):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 17):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 19):\n",
      "\n",
      "    Q4\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya\"\n",
      "[1] \"Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya')\n",
    "print('Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q4'</li>\n",
       "\t<li>'Q7'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q4'\n",
       "\\item 'Q7'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q4'\n",
       "2. 'Q7'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q4\" \"Q7\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 9):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 11):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 14):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 17):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 20):\n",
      "\n",
      "    Q4\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya\"\n",
      "[1] \"Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya')\n",
    "print('Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q4'</li>\n",
       "\t<li>'Q8'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q4'\n",
       "\\item 'Q8'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q4'\n",
       "2. 'Q8'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q4\" \"Q8\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 10):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 11):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 15):\n",
      "\n",
      "    Q4\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 17):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 21):\n",
      "\n",
      "    Q4\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya\"\n",
      "[1] \"Q8 = Seberapa banyak program office selain Microsoft office\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q4 = Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya')\n",
    "print('Q8 = Seberapa banyak program office selain Microsoft office')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q5'</li>\n",
       "\t<li>'Q6'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q5'\n",
       "\\item 'Q6'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q5'\n",
       "2. 'Q6'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q5\" \"Q6\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 9):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 10):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 14):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 15):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 20):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 21):\n",
      "\n",
      "    Q5\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang\"\n",
      "[1] \"Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang')\n",
    "print('Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q5'</li>\n",
       "\t<li>'Q7'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q5'\n",
       "\\item 'Q7'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q5'\n",
       "2. 'Q7'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q5\" \"Q7\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 9):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 11):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 14):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 16):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 20):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 22):\n",
      "\n",
      "    Q5\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang\"\n",
      "[1] \"Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang')\n",
    "print('Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q5'</li>\n",
       "\t<li>'Q8'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q5'\n",
       "\\item 'Q8'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q5'\n",
       "2. 'Q8'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q5\" \"Q8\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 9):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 12):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 14):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 17):\n",
      "\n",
      "    Q5\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 20):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 23):\n",
      "\n",
      "    Q5\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang\"\n",
      "[1] \"Q8 = Seberapa banyak program office selain Microsoft office\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q5 = Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang')\n",
    "print('Q8 = Seberapa banyak program office selain Microsoft office')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q6'</li>\n",
       "\t<li>'Q7'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q6'\n",
       "\\item 'Q7'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q6'\n",
       "2. 'Q7'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q6\" \"Q7\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 11):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 12):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 16):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 17):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 22):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 23):\n",
      "\n",
      "    Q6\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word\"\n",
      "[1] \"Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word')\n",
    "print('Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q6'</li>\n",
       "\t<li>'Q8'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q6'\n",
       "\\item 'Q8'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q6'\n",
       "2. 'Q8'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q6\" \"Q8\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 9):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 11):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 13):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 16):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 18):\n",
      "\n",
      "    Q6\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 22):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 24):\n",
      "\n",
      "    Q6\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word\"\n",
      "[1] \"Q8 = Seberapa banyak program office selain Microsoft office\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q6 = Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word')\n",
    "print('Q8 = Seberapa banyak program office selain Microsoft office')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<ol class=list-inline>\n",
       "\t<li>'Q7'</li>\n",
       "\t<li>'Q8'</li>\n",
       "</ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'Q7'\n",
       "\\item 'Q8'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'Q7'\n",
       "2. 'Q8'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] \"Q7\" \"Q8\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Ttest_data = read.csv (file.choose(),header=T)\n",
    "names(Ttest_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following object is masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 4):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 9):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 12):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 13):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 17):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 18):\n",
      "\n",
      "    Q7\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 23):\n",
      "\n",
      "    Q8\n",
      "\n",
      "The following object is masked from Ttest_data (pos = 24):\n",
      "\n",
      "    Q7\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "\tPaired t-test\n",
       "\n",
       "data:  Q1 and Q2\n",
       "t = -22.211, df = 527, p-value < 2.2e-16\n",
       "alternative hypothesis: true difference in means is not equal to 0\n",
       "99 percent confidence interval:\n",
       " -1.539266 -1.218309\n",
       "sample estimates:\n",
       "mean of the differences \n",
       "              -1.378788 \n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual\"\n",
      "[1] \"Q8 = Seberapa banyak program office selain Microsoft office\"\n"
     ]
    }
   ],
   "source": [
    "attach (Ttest_data)\n",
    "t.test (Q1, Q2, mu=0, alt=\"two.sided\", paired=T, conf.level=0.99)\n",
    "print('Q7 = Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual')\n",
    "print('Q8 = Seberapa banyak program office selain Microsoft office')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. Uji data menggunakan Principal Component Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "mydata<-read.csv('AOK data baru.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Responded</th><th scope=col>Q1</th><th scope=col>Q2</th><th scope=col>Q3</th><th scope=col>Q4</th><th scope=col>Q5</th><th scope=col>Q6</th><th scope=col>Q7</th><th scope=col>Q8</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td>Responded 1 </td><td>2           </td><td>2           </td><td>3           </td><td>2           </td><td>2           </td><td>4           </td><td>2           </td><td>4           </td></tr>\n",
       "\t<tr><td>Responded 2 </td><td>1           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>1           </td><td>1           </td><td>3           </td></tr>\n",
       "\t<tr><td>Responded 3 </td><td>1           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>1           </td><td>1           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 4 </td><td>1           </td><td>2           </td><td>2           </td><td>2           </td><td>1           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 5 </td><td>5           </td><td>1           </td><td>2           </td><td>3           </td><td>4           </td><td>1           </td><td>1           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 6 </td><td>2           </td><td>1           </td><td>2           </td><td>1           </td><td>3           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 7 </td><td>1           </td><td>4           </td><td>2           </td><td>2           </td><td>2           </td><td>1           </td><td>2           </td><td>4           </td></tr>\n",
       "\t<tr><td>Responded 8 </td><td>2           </td><td>2           </td><td>3           </td><td>3           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 9 </td><td>2           </td><td>4           </td><td>2           </td><td>2           </td><td>3           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 10</td><td>1           </td><td>2           </td><td>1           </td><td>3           </td><td>2           </td><td>2           </td><td>1           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 11</td><td>1           </td><td>4           </td><td>1           </td><td>4           </td><td>2           </td><td>5           </td><td>1           </td><td>1           </td></tr>\n",
       "\t<tr><td>Responded 12</td><td>1           </td><td>4           </td><td>1           </td><td>4           </td><td>2           </td><td>5           </td><td>1           </td><td>1           </td></tr>\n",
       "\t<tr><td>Responded 13</td><td>1           </td><td>1           </td><td>1           </td><td>1           </td><td>1           </td><td>1           </td><td>1           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 14</td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>1           </td><td>1           </td></tr>\n",
       "\t<tr><td>Responded 15</td><td>2           </td><td>4           </td><td>2           </td><td>3           </td><td>2           </td><td>2           </td><td>1           </td><td>1           </td></tr>\n",
       "\t<tr><td>Responded 16</td><td>2           </td><td>5           </td><td>3           </td><td>2           </td><td>2           </td><td>1           </td><td>1           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 17</td><td>2           </td><td>2           </td><td>4           </td><td>3           </td><td>3           </td><td>3           </td><td>2           </td><td>1           </td></tr>\n",
       "\t<tr><td>Responded 18</td><td>2           </td><td>3           </td><td>4           </td><td>3           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 19</td><td>2           </td><td>5           </td><td>3           </td><td>3           </td><td>2           </td><td>4           </td><td>2           </td><td>3           </td></tr>\n",
       "\t<tr><td>Responded 20</td><td>1           </td><td>5           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 21</td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>1           </td><td>1           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 22</td><td>1           </td><td>4           </td><td>2           </td><td>3           </td><td>2           </td><td>2           </td><td>1           </td><td>3           </td></tr>\n",
       "\t<tr><td>Responded 23</td><td>1           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>1           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 24</td><td>2           </td><td>2           </td><td>2           </td><td>3           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 25</td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 26</td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 27</td><td>5           </td><td>5           </td><td>5           </td><td>3           </td><td>1           </td><td>1           </td><td>1           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 28</td><td>1           </td><td>2           </td><td>2           </td><td>3           </td><td>3           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>Responded 29</td><td>2           </td><td>5           </td><td>2           </td><td>3           </td><td>3           </td><td>2           </td><td>2           </td><td>3           </td></tr>\n",
       "\t<tr><td>Responded 30</td><td>2           </td><td>5           </td><td>1           </td><td>3           </td><td>2           </td><td>2           </td><td>2           </td><td>2           </td></tr>\n",
       "\t<tr><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td><td>...</td></tr>\n",
       "\t<tr><td>Responded 499</td><td>2            </td><td>4            </td><td>1            </td><td>2            </td><td>2            </td><td>2            </td><td>1            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 500</td><td>1            </td><td>3            </td><td>2            </td><td>3            </td><td>3            </td><td>2            </td><td>1            </td><td>3            </td></tr>\n",
       "\t<tr><td>Responded 501</td><td>2            </td><td>4            </td><td>2            </td><td>2            </td><td>1            </td><td>1            </td><td>1            </td><td>4            </td></tr>\n",
       "\t<tr><td>Responded 502</td><td>2            </td><td>2            </td><td>1            </td><td>2            </td><td>3            </td><td>4            </td><td>1            </td><td>3            </td></tr>\n",
       "\t<tr><td>Responded 503</td><td>2            </td><td>2            </td><td>2            </td><td>2            </td><td>2            </td><td>4            </td><td>2            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 504</td><td>2            </td><td>3            </td><td>2            </td><td>2            </td><td>2            </td><td>2            </td><td>2            </td><td>3            </td></tr>\n",
       "\t<tr><td>Responded 505</td><td>2            </td><td>3            </td><td>2            </td><td>2            </td><td>2            </td><td>2            </td><td>2            </td><td>1            </td></tr>\n",
       "\t<tr><td>Responded 506</td><td>2            </td><td>4            </td><td>2            </td><td>4            </td><td>2            </td><td>2            </td><td>1            </td><td>3            </td></tr>\n",
       "\t<tr><td>Responded 507</td><td>5            </td><td>4            </td><td>4            </td><td>4            </td><td>2            </td><td>1            </td><td>2            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 508</td><td>2            </td><td>5            </td><td>3            </td><td>3            </td><td>2            </td><td>4            </td><td>2            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 509</td><td>2            </td><td>2            </td><td>3            </td><td>3            </td><td>3            </td><td>2            </td><td>2            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 510</td><td>1            </td><td>4            </td><td>3            </td><td>3            </td><td>2            </td><td>2            </td><td>2            </td><td>3            </td></tr>\n",
       "\t<tr><td>Responded 511</td><td>1            </td><td>2            </td><td>2            </td><td>3            </td><td>2            </td><td>2            </td><td>1            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 512</td><td>1            </td><td>2            </td><td>2            </td><td>3            </td><td>1            </td><td>1            </td><td>1            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 513</td><td>1            </td><td>5            </td><td>2            </td><td>2            </td><td>2            </td><td>2            </td><td>2            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 514</td><td>2            </td><td>3            </td><td>3            </td><td>3            </td><td>2            </td><td>2            </td><td>2            </td><td>4            </td></tr>\n",
       "\t<tr><td>Responded 515</td><td>2            </td><td>2            </td><td>3            </td><td>2            </td><td>2            </td><td>2            </td><td>1            </td><td>3            </td></tr>\n",
       "\t<tr><td>Responded 516</td><td>2            </td><td>4            </td><td>2            </td><td>2            </td><td>2            </td><td>4            </td><td>2            </td><td>4            </td></tr>\n",
       "\t<tr><td>Responded 517</td><td>1            </td><td>5            </td><td>1            </td><td>2            </td><td>1            </td><td>1            </td><td>1            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 518</td><td>2            </td><td>4            </td><td>2            </td><td>2            </td><td>1            </td><td>1            </td><td>2            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 519</td><td>2            </td><td>2            </td><td>3            </td><td>5            </td><td>1            </td><td>2            </td><td>2            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 520</td><td>1            </td><td>5            </td><td>1            </td><td>2            </td><td>1            </td><td>1            </td><td>1            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 521</td><td>1            </td><td>3            </td><td>2            </td><td>3            </td><td>1            </td><td>1            </td><td>1            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 522</td><td>2            </td><td>4            </td><td>2            </td><td>3            </td><td>3            </td><td>4            </td><td>2            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 523</td><td>1            </td><td>3            </td><td>1            </td><td>2            </td><td>2            </td><td>2            </td><td>1            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 524</td><td>2            </td><td>2            </td><td>2            </td><td>3            </td><td>2            </td><td>2            </td><td>3            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 525</td><td>1            </td><td>1            </td><td>2            </td><td>3            </td><td>3            </td><td>2            </td><td>3            </td><td>1            </td></tr>\n",
       "\t<tr><td>Responded 526</td><td>2            </td><td>3            </td><td>2            </td><td>3            </td><td>2            </td><td>2            </td><td>2            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 527</td><td>2            </td><td>4            </td><td>2            </td><td>3            </td><td>3            </td><td>2            </td><td>2            </td><td>2            </td></tr>\n",
       "\t<tr><td>Responded 528</td><td>2            </td><td>2            </td><td>2            </td><td>3            </td><td>3            </td><td>4            </td><td>3            </td><td>3            </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|lllllllll}\n",
       " Responded & Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7 & Q8\\\\\n",
       "\\hline\n",
       "\t Responded 1  & 2            & 2            & 3            & 2            & 2            & 4            & 2            & 4           \\\\\n",
       "\t Responded 2  & 1            & 2            & 2            & 2            & 2            & 1            & 1            & 3           \\\\\n",
       "\t Responded 3  & 1            & 2            & 2            & 2            & 2            & 1            & 1            & 2           \\\\\n",
       "\t Responded 4  & 1            & 2            & 2            & 2            & 1            & 2            & 2            & 2           \\\\\n",
       "\t Responded 5  & 5            & 1            & 2            & 3            & 4            & 1            & 1            & 2           \\\\\n",
       "\t Responded 6  & 2            & 1            & 2            & 1            & 3            & 2            & 2            & 2           \\\\\n",
       "\t Responded 7  & 1            & 4            & 2            & 2            & 2            & 1            & 2            & 4           \\\\\n",
       "\t Responded 8  & 2            & 2            & 3            & 3            & 2            & 2            & 2            & 2           \\\\\n",
       "\t Responded 9  & 2            & 4            & 2            & 2            & 3            & 2            & 2            & 2           \\\\\n",
       "\t Responded 10 & 1            & 2            & 1            & 3            & 2            & 2            & 1            & 2           \\\\\n",
       "\t Responded 11 & 1            & 4            & 1            & 4            & 2            & 5            & 1            & 1           \\\\\n",
       "\t Responded 12 & 1            & 4            & 1            & 4            & 2            & 5            & 1            & 1           \\\\\n",
       "\t Responded 13 & 1            & 1            & 1            & 1            & 1            & 1            & 1            & 2           \\\\\n",
       "\t Responded 14 & 2            & 2            & 2            & 2            & 2            & 2            & 1            & 1           \\\\\n",
       "\t Responded 15 & 2            & 4            & 2            & 3            & 2            & 2            & 1            & 1           \\\\\n",
       "\t Responded 16 & 2            & 5            & 3            & 2            & 2            & 1            & 1            & 2           \\\\\n",
       "\t Responded 17 & 2            & 2            & 4            & 3            & 3            & 3            & 2            & 1           \\\\\n",
       "\t Responded 18 & 2            & 3            & 4            & 3            & 2            & 2            & 2            & 2           \\\\\n",
       "\t Responded 19 & 2            & 5            & 3            & 3            & 2            & 4            & 2            & 3           \\\\\n",
       "\t Responded 20 & 1            & 5            & 2            & 2            & 2            & 2            & 2            & 2           \\\\\n",
       "\t Responded 21 & 2            & 2            & 2            & 2            & 2            & 1            & 1            & 2           \\\\\n",
       "\t Responded 22 & 1            & 4            & 2            & 3            & 2            & 2            & 1            & 3           \\\\\n",
       "\t Responded 23 & 1            & 2            & 2            & 2            & 2            & 2            & 1            & 2           \\\\\n",
       "\t Responded 24 & 2            & 2            & 2            & 3            & 2            & 2            & 2            & 2           \\\\\n",
       "\t Responded 25 & 2            & 2            & 2            & 2            & 2            & 2            & 2            & 2           \\\\\n",
       "\t Responded 26 & 2            & 2            & 2            & 2            & 2            & 2            & 2            & 2           \\\\\n",
       "\t Responded 27 & 5            & 5            & 5            & 3            & 1            & 1            & 1            & 2           \\\\\n",
       "\t Responded 28 & 1            & 2            & 2            & 3            & 3            & 2            & 2            & 2           \\\\\n",
       "\t Responded 29 & 2            & 5            & 2            & 3            & 3            & 2            & 2            & 3           \\\\\n",
       "\t Responded 30 & 2            & 5            & 1            & 3            & 2            & 2            & 2            & 2           \\\\\n",
       "\t ... & ... & ... & ... & ... & ... & ... & ... & ...\\\\\n",
       "\t Responded 499 & 2             & 4             & 1             & 2             & 2             & 2             & 1             & 2            \\\\\n",
       "\t Responded 500 & 1             & 3             & 2             & 3             & 3             & 2             & 1             & 3            \\\\\n",
       "\t Responded 501 & 2             & 4             & 2             & 2             & 1             & 1             & 1             & 4            \\\\\n",
       "\t Responded 502 & 2             & 2             & 1             & 2             & 3             & 4             & 1             & 3            \\\\\n",
       "\t Responded 503 & 2             & 2             & 2             & 2             & 2             & 4             & 2             & 2            \\\\\n",
       "\t Responded 504 & 2             & 3             & 2             & 2             & 2             & 2             & 2             & 3            \\\\\n",
       "\t Responded 505 & 2             & 3             & 2             & 2             & 2             & 2             & 2             & 1            \\\\\n",
       "\t Responded 506 & 2             & 4             & 2             & 4             & 2             & 2             & 1             & 3            \\\\\n",
       "\t Responded 507 & 5             & 4             & 4             & 4             & 2             & 1             & 2             & 2            \\\\\n",
       "\t Responded 508 & 2             & 5             & 3             & 3             & 2             & 4             & 2             & 2            \\\\\n",
       "\t Responded 509 & 2             & 2             & 3             & 3             & 3             & 2             & 2             & 2            \\\\\n",
       "\t Responded 510 & 1             & 4             & 3             & 3             & 2             & 2             & 2             & 3            \\\\\n",
       "\t Responded 511 & 1             & 2             & 2             & 3             & 2             & 2             & 1             & 2            \\\\\n",
       "\t Responded 512 & 1             & 2             & 2             & 3             & 1             & 1             & 1             & 2            \\\\\n",
       "\t Responded 513 & 1             & 5             & 2             & 2             & 2             & 2             & 2             & 2            \\\\\n",
       "\t Responded 514 & 2             & 3             & 3             & 3             & 2             & 2             & 2             & 4            \\\\\n",
       "\t Responded 515 & 2             & 2             & 3             & 2             & 2             & 2             & 1             & 3            \\\\\n",
       "\t Responded 516 & 2             & 4             & 2             & 2             & 2             & 4             & 2             & 4            \\\\\n",
       "\t Responded 517 & 1             & 5             & 1             & 2             & 1             & 1             & 1             & 2            \\\\\n",
       "\t Responded 518 & 2             & 4             & 2             & 2             & 1             & 1             & 2             & 2            \\\\\n",
       "\t Responded 519 & 2             & 2             & 3             & 5             & 1             & 2             & 2             & 2            \\\\\n",
       "\t Responded 520 & 1             & 5             & 1             & 2             & 1             & 1             & 1             & 2            \\\\\n",
       "\t Responded 521 & 1             & 3             & 2             & 3             & 1             & 1             & 1             & 2            \\\\\n",
       "\t Responded 522 & 2             & 4             & 2             & 3             & 3             & 4             & 2             & 2            \\\\\n",
       "\t Responded 523 & 1             & 3             & 1             & 2             & 2             & 2             & 1             & 2            \\\\\n",
       "\t Responded 524 & 2             & 2             & 2             & 3             & 2             & 2             & 3             & 2            \\\\\n",
       "\t Responded 525 & 1             & 1             & 2             & 3             & 3             & 2             & 3             & 1            \\\\\n",
       "\t Responded 526 & 2             & 3             & 2             & 3             & 2             & 2             & 2             & 2            \\\\\n",
       "\t Responded 527 & 2             & 4             & 2             & 3             & 3             & 2             & 2             & 2            \\\\\n",
       "\t Responded 528 & 2             & 2             & 2             & 3             & 3             & 4             & 3             & 3            \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "| Responded | Q1 | Q2 | Q3 | Q4 | Q5 | Q6 | Q7 | Q8 |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| Responded 1  | 2            | 2            | 3            | 2            | 2            | 4            | 2            | 4            |\n",
       "| Responded 2  | 1            | 2            | 2            | 2            | 2            | 1            | 1            | 3            |\n",
       "| Responded 3  | 1            | 2            | 2            | 2            | 2            | 1            | 1            | 2            |\n",
       "| Responded 4  | 1            | 2            | 2            | 2            | 1            | 2            | 2            | 2            |\n",
       "| Responded 5  | 5            | 1            | 2            | 3            | 4            | 1            | 1            | 2            |\n",
       "| Responded 6  | 2            | 1            | 2            | 1            | 3            | 2            | 2            | 2            |\n",
       "| Responded 7  | 1            | 4            | 2            | 2            | 2            | 1            | 2            | 4            |\n",
       "| Responded 8  | 2            | 2            | 3            | 3            | 2            | 2            | 2            | 2            |\n",
       "| Responded 9  | 2            | 4            | 2            | 2            | 3            | 2            | 2            | 2            |\n",
       "| Responded 10 | 1            | 2            | 1            | 3            | 2            | 2            | 1            | 2            |\n",
       "| Responded 11 | 1            | 4            | 1            | 4            | 2            | 5            | 1            | 1            |\n",
       "| Responded 12 | 1            | 4            | 1            | 4            | 2            | 5            | 1            | 1            |\n",
       "| Responded 13 | 1            | 1            | 1            | 1            | 1            | 1            | 1            | 2            |\n",
       "| Responded 14 | 2            | 2            | 2            | 2            | 2            | 2            | 1            | 1            |\n",
       "| Responded 15 | 2            | 4            | 2            | 3            | 2            | 2            | 1            | 1            |\n",
       "| Responded 16 | 2            | 5            | 3            | 2            | 2            | 1            | 1            | 2            |\n",
       "| Responded 17 | 2            | 2            | 4            | 3            | 3            | 3            | 2            | 1            |\n",
       "| Responded 18 | 2            | 3            | 4            | 3            | 2            | 2            | 2            | 2            |\n",
       "| Responded 19 | 2            | 5            | 3            | 3            | 2            | 4            | 2            | 3            |\n",
       "| Responded 20 | 1            | 5            | 2            | 2            | 2            | 2            | 2            | 2            |\n",
       "| Responded 21 | 2            | 2            | 2            | 2            | 2            | 1            | 1            | 2            |\n",
       "| Responded 22 | 1            | 4            | 2            | 3            | 2            | 2            | 1            | 3            |\n",
       "| Responded 23 | 1            | 2            | 2            | 2            | 2            | 2            | 1            | 2            |\n",
       "| Responded 24 | 2            | 2            | 2            | 3            | 2            | 2            | 2            | 2            |\n",
       "| Responded 25 | 2            | 2            | 2            | 2            | 2            | 2            | 2            | 2            |\n",
       "| Responded 26 | 2            | 2            | 2            | 2            | 2            | 2            | 2            | 2            |\n",
       "| Responded 27 | 5            | 5            | 5            | 3            | 1            | 1            | 1            | 2            |\n",
       "| Responded 28 | 1            | 2            | 2            | 3            | 3            | 2            | 2            | 2            |\n",
       "| Responded 29 | 2            | 5            | 2            | 3            | 3            | 2            | 2            | 3            |\n",
       "| Responded 30 | 2            | 5            | 1            | 3            | 2            | 2            | 2            | 2            |\n",
       "| ... | ... | ... | ... | ... | ... | ... | ... | ... |\n",
       "| Responded 499 | 2             | 4             | 1             | 2             | 2             | 2             | 1             | 2             |\n",
       "| Responded 500 | 1             | 3             | 2             | 3             | 3             | 2             | 1             | 3             |\n",
       "| Responded 501 | 2             | 4             | 2             | 2             | 1             | 1             | 1             | 4             |\n",
       "| Responded 502 | 2             | 2             | 1             | 2             | 3             | 4             | 1             | 3             |\n",
       "| Responded 503 | 2             | 2             | 2             | 2             | 2             | 4             | 2             | 2             |\n",
       "| Responded 504 | 2             | 3             | 2             | 2             | 2             | 2             | 2             | 3             |\n",
       "| Responded 505 | 2             | 3             | 2             | 2             | 2             | 2             | 2             | 1             |\n",
       "| Responded 506 | 2             | 4             | 2             | 4             | 2             | 2             | 1             | 3             |\n",
       "| Responded 507 | 5             | 4             | 4             | 4             | 2             | 1             | 2             | 2             |\n",
       "| Responded 508 | 2             | 5             | 3             | 3             | 2             | 4             | 2             | 2             |\n",
       "| Responded 509 | 2             | 2             | 3             | 3             | 3             | 2             | 2             | 2             |\n",
       "| Responded 510 | 1             | 4             | 3             | 3             | 2             | 2             | 2             | 3             |\n",
       "| Responded 511 | 1             | 2             | 2             | 3             | 2             | 2             | 1             | 2             |\n",
       "| Responded 512 | 1             | 2             | 2             | 3             | 1             | 1             | 1             | 2             |\n",
       "| Responded 513 | 1             | 5             | 2             | 2             | 2             | 2             | 2             | 2             |\n",
       "| Responded 514 | 2             | 3             | 3             | 3             | 2             | 2             | 2             | 4             |\n",
       "| Responded 515 | 2             | 2             | 3             | 2             | 2             | 2             | 1             | 3             |\n",
       "| Responded 516 | 2             | 4             | 2             | 2             | 2             | 4             | 2             | 4             |\n",
       "| Responded 517 | 1             | 5             | 1             | 2             | 1             | 1             | 1             | 2             |\n",
       "| Responded 518 | 2             | 4             | 2             | 2             | 1             | 1             | 2             | 2             |\n",
       "| Responded 519 | 2             | 2             | 3             | 5             | 1             | 2             | 2             | 2             |\n",
       "| Responded 520 | 1             | 5             | 1             | 2             | 1             | 1             | 1             | 2             |\n",
       "| Responded 521 | 1             | 3             | 2             | 3             | 1             | 1             | 1             | 2             |\n",
       "| Responded 522 | 2             | 4             | 2             | 3             | 3             | 4             | 2             | 2             |\n",
       "| Responded 523 | 1             | 3             | 1             | 2             | 2             | 2             | 1             | 2             |\n",
       "| Responded 524 | 2             | 2             | 2             | 3             | 2             | 2             | 3             | 2             |\n",
       "| Responded 525 | 1             | 1             | 2             | 3             | 3             | 2             | 3             | 1             |\n",
       "| Responded 526 | 2             | 3             | 2             | 3             | 2             | 2             | 2             | 2             |\n",
       "| Responded 527 | 2             | 4             | 2             | 3             | 3             | 2             | 2             | 2             |\n",
       "| Responded 528 | 2             | 2             | 2             | 3             | 3             | 4             | 3             | 3             |\n",
       "\n"
      ],
      "text/plain": [
       "    Responded     Q1  Q2  Q3  Q4  Q5  Q6  Q7  Q8 \n",
       "1   Responded 1   2   2   3   2   2   4   2   4  \n",
       "2   Responded 2   1   2   2   2   2   1   1   3  \n",
       "3   Responded 3   1   2   2   2   2   1   1   2  \n",
       "4   Responded 4   1   2   2   2   1   2   2   2  \n",
       "5   Responded 5   5   1   2   3   4   1   1   2  \n",
       "6   Responded 6   2   1   2   1   3   2   2   2  \n",
       "7   Responded 7   1   4   2   2   2   1   2   4  \n",
       "8   Responded 8   2   2   3   3   2   2   2   2  \n",
       "9   Responded 9   2   4   2   2   3   2   2   2  \n",
       "10  Responded 10  1   2   1   3   2   2   1   2  \n",
       "11  Responded 11  1   4   1   4   2   5   1   1  \n",
       "12  Responded 12  1   4   1   4   2   5   1   1  \n",
       "13  Responded 13  1   1   1   1   1   1   1   2  \n",
       "14  Responded 14  2   2   2   2   2   2   1   1  \n",
       "15  Responded 15  2   4   2   3   2   2   1   1  \n",
       "16  Responded 16  2   5   3   2   2   1   1   2  \n",
       "17  Responded 17  2   2   4   3   3   3   2   1  \n",
       "18  Responded 18  2   3   4   3   2   2   2   2  \n",
       "19  Responded 19  2   5   3   3   2   4   2   3  \n",
       "20  Responded 20  1   5   2   2   2   2   2   2  \n",
       "21  Responded 21  2   2   2   2   2   1   1   2  \n",
       "22  Responded 22  1   4   2   3   2   2   1   3  \n",
       "23  Responded 23  1   2   2   2   2   2   1   2  \n",
       "24  Responded 24  2   2   2   3   2   2   2   2  \n",
       "25  Responded 25  2   2   2   2   2   2   2   2  \n",
       "26  Responded 26  2   2   2   2   2   2   2   2  \n",
       "27  Responded 27  5   5   5   3   1   1   1   2  \n",
       "28  Responded 28  1   2   2   3   3   2   2   2  \n",
       "29  Responded 29  2   5   2   3   3   2   2   3  \n",
       "30  Responded 30  2   5   1   3   2   2   2   2  \n",
       "... ...           ... ... ... ... ... ... ... ...\n",
       "499 Responded 499 2   4   1   2   2   2   1   2  \n",
       "500 Responded 500 1   3   2   3   3   2   1   3  \n",
       "501 Responded 501 2   4   2   2   1   1   1   4  \n",
       "502 Responded 502 2   2   1   2   3   4   1   3  \n",
       "503 Responded 503 2   2   2   2   2   4   2   2  \n",
       "504 Responded 504 2   3   2   2   2   2   2   3  \n",
       "505 Responded 505 2   3   2   2   2   2   2   1  \n",
       "506 Responded 506 2   4   2   4   2   2   1   3  \n",
       "507 Responded 507 5   4   4   4   2   1   2   2  \n",
       "508 Responded 508 2   5   3   3   2   4   2   2  \n",
       "509 Responded 509 2   2   3   3   3   2   2   2  \n",
       "510 Responded 510 1   4   3   3   2   2   2   3  \n",
       "511 Responded 511 1   2   2   3   2   2   1   2  \n",
       "512 Responded 512 1   2   2   3   1   1   1   2  \n",
       "513 Responded 513 1   5   2   2   2   2   2   2  \n",
       "514 Responded 514 2   3   3   3   2   2   2   4  \n",
       "515 Responded 515 2   2   3   2   2   2   1   3  \n",
       "516 Responded 516 2   4   2   2   2   4   2   4  \n",
       "517 Responded 517 1   5   1   2   1   1   1   2  \n",
       "518 Responded 518 2   4   2   2   1   1   2   2  \n",
       "519 Responded 519 2   2   3   5   1   2   2   2  \n",
       "520 Responded 520 1   5   1   2   1   1   1   2  \n",
       "521 Responded 521 1   3   2   3   1   1   1   2  \n",
       "522 Responded 522 2   4   2   3   3   4   2   2  \n",
       "523 Responded 523 1   3   1   2   2   2   1   2  \n",
       "524 Responded 524 2   2   2   3   2   2   3   2  \n",
       "525 Responded 525 1   1   2   3   3   2   3   1  \n",
       "526 Responded 526 2   3   2   3   2   2   2   2  \n",
       "527 Responded 527 2   4   2   3   3   2   2   2  \n",
       "528 Responded 528 2   2   2   3   3   4   3   3  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "mydata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "The following objects are masked from Ttest_data (pos = 3):\n",
      "\n",
      "    Q1, Q2\n",
      "\n",
      "The following objects are masked from mydata (pos = 4):\n",
      "\n",
      "    Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 5):\n",
      "\n",
      "    Q7, Q8\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 6):\n",
      "\n",
      "    Q6, Q8\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 7):\n",
      "\n",
      "    Q6, Q7\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 8):\n",
      "\n",
      "    Q5, Q8\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 9):\n",
      "\n",
      "    Q5, Q7\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 10):\n",
      "\n",
      "    Q5, Q6\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 11):\n",
      "\n",
      "    Q4, Q8\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 12):\n",
      "\n",
      "    Q4, Q7\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 13):\n",
      "\n",
      "    Q4, Q6\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 14):\n",
      "\n",
      "    Q4, Q5\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 15):\n",
      "\n",
      "    Q3, Q8\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 16):\n",
      "\n",
      "    Q3, Q7\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 17):\n",
      "\n",
      "    Q3, Q6\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 18):\n",
      "\n",
      "    Q3, Q5\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 19):\n",
      "\n",
      "    Q3, Q4\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 20):\n",
      "\n",
      "    Q2, Q8\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 21):\n",
      "\n",
      "    Q2, Q7\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 22):\n",
      "\n",
      "    Q2, Q6\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 23):\n",
      "\n",
      "    Q2, Q5\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 24):\n",
      "\n",
      "    Q2, Q4\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 25):\n",
      "\n",
      "    Q2, Q3\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 26):\n",
      "\n",
      "    Q1, Q8\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 27):\n",
      "\n",
      "    Q1, Q7\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 28):\n",
      "\n",
      "    Q1, Q6\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 29):\n",
      "\n",
      "    Q1, Q5\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 30):\n",
      "\n",
      "    Q1, Q4\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 31):\n",
      "\n",
      "    Q1, Q3\n",
      "\n",
      "The following objects are masked from Ttest_data (pos = 32):\n",
      "\n",
      "    Q1, Q2\n",
      "\n"
     ]
    }
   ],
   "source": [
    "attach(mydata)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define Variables\n",
    "x <- cbind(Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "       Q1              Q2              Q3             Q4              Q5      \n",
       " Min.   :1.000   Min.   :1.000   Min.   :1.00   Min.   :1.000   Min.   :1.00  \n",
       " 1st Qu.:1.000   1st Qu.:2.000   1st Qu.:2.00   1st Qu.:2.000   1st Qu.:2.00  \n",
       " Median :2.000   Median :3.000   Median :2.00   Median :3.000   Median :2.00  \n",
       " Mean   :1.828   Mean   :3.206   Mean   :2.14   Mean   :2.547   Mean   :2.07  \n",
       " 3rd Qu.:2.000   3rd Qu.:4.000   3rd Qu.:2.00   3rd Qu.:3.000   3rd Qu.:2.00  \n",
       " Max.   :5.000   Max.   :5.000   Max.   :5.00   Max.   :5.000   Max.   :5.00  \n",
       "       Q6              Q7              Q8       \n",
       " Min.   :1.000   Min.   :1.000   Min.   :1.000  \n",
       " 1st Qu.:1.000   1st Qu.:1.000   1st Qu.:2.000  \n",
       " Median :2.000   Median :2.000   Median :2.000  \n",
       " Mean   :2.034   Mean   :1.733   Mean   :2.265  \n",
       " 3rd Qu.:2.000   3rd Qu.:2.000   3rd Qu.:3.000  \n",
       " Max.   :5.000   Max.   :5.000   Max.   :5.000  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th></th><th scope=col>Q1</th><th scope=col>Q2</th><th scope=col>Q3</th><th scope=col>Q4</th><th scope=col>Q5</th><th scope=col>Q6</th><th scope=col>Q7</th><th scope=col>Q8</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>Q1</th><td>1.000000000</td><td>0.1772585  </td><td>0.26806737 </td><td>0.1255220  </td><td>0.1407728  </td><td>0.08908168 </td><td>0.07073243 </td><td>0.004843475</td></tr>\n",
       "\t<tr><th scope=row>Q2</th><td>0.177258519</td><td>1.0000000  </td><td>0.10679940 </td><td>0.1635854  </td><td>0.1538900  </td><td>0.16933632 </td><td>0.13027723 </td><td>0.146094177</td></tr>\n",
       "\t<tr><th scope=row>Q3</th><td>0.268067373</td><td>0.1067994  </td><td>1.00000000 </td><td>0.3054275  </td><td>0.1343392  </td><td>0.13972092 </td><td>0.18181699 </td><td>0.023462872</td></tr>\n",
       "\t<tr><th scope=row>Q4</th><td>0.125522005</td><td>0.1635854  </td><td>0.30542746 </td><td>1.0000000  </td><td>0.1429560  </td><td>0.11957737 </td><td>0.15368558 </td><td>0.155930112</td></tr>\n",
       "\t<tr><th scope=row>Q5</th><td>0.140772832</td><td>0.1538900  </td><td>0.13433921 </td><td>0.1429560  </td><td>1.0000000  </td><td>0.43858367 </td><td>0.35123652 </td><td>0.207107742</td></tr>\n",
       "\t<tr><th scope=row>Q6</th><td>0.089081679</td><td>0.1693363  </td><td>0.13972092 </td><td>0.1195774  </td><td>0.4385837  </td><td>1.00000000 </td><td>0.39140203 </td><td>0.155334384</td></tr>\n",
       "\t<tr><th scope=row>Q7</th><td>0.070732428</td><td>0.1302772  </td><td>0.18181699 </td><td>0.1536856  </td><td>0.3512365  </td><td>0.39140203 </td><td>1.00000000 </td><td>0.272037710</td></tr>\n",
       "\t<tr><th scope=row>Q8</th><td>0.004843475</td><td>0.1460942  </td><td>0.02346287 </td><td>0.1559301  </td><td>0.2071077  </td><td>0.15533438 </td><td>0.27203771 </td><td>1.000000000</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{r|llllllll}\n",
       "  & Q1 & Q2 & Q3 & Q4 & Q5 & Q6 & Q7 & Q8\\\\\n",
       "\\hline\n",
       "\tQ1 & 1.000000000 & 0.1772585   & 0.26806737  & 0.1255220   & 0.1407728   & 0.08908168  & 0.07073243  & 0.004843475\\\\\n",
       "\tQ2 & 0.177258519 & 1.0000000   & 0.10679940  & 0.1635854   & 0.1538900   & 0.16933632  & 0.13027723  & 0.146094177\\\\\n",
       "\tQ3 & 0.268067373 & 0.1067994   & 1.00000000  & 0.3054275   & 0.1343392   & 0.13972092  & 0.18181699  & 0.023462872\\\\\n",
       "\tQ4 & 0.125522005 & 0.1635854   & 0.30542746  & 1.0000000   & 0.1429560   & 0.11957737  & 0.15368558  & 0.155930112\\\\\n",
       "\tQ5 & 0.140772832 & 0.1538900   & 0.13433921  & 0.1429560   & 1.0000000   & 0.43858367  & 0.35123652  & 0.207107742\\\\\n",
       "\tQ6 & 0.089081679 & 0.1693363   & 0.13972092  & 0.1195774   & 0.4385837   & 1.00000000  & 0.39140203  & 0.155334384\\\\\n",
       "\tQ7 & 0.070732428 & 0.1302772   & 0.18181699  & 0.1536856   & 0.3512365   & 0.39140203  & 1.00000000  & 0.272037710\\\\\n",
       "\tQ8 & 0.004843475 & 0.1460942   & 0.02346287  & 0.1559301   & 0.2071077   & 0.15533438  & 0.27203771  & 1.000000000\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "| <!--/--> | Q1 | Q2 | Q3 | Q4 | Q5 | Q6 | Q7 | Q8 |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| Q1 | 1.000000000 | 0.1772585   | 0.26806737  | 0.1255220   | 0.1407728   | 0.08908168  | 0.07073243  | 0.004843475 |\n",
       "| Q2 | 0.177258519 | 1.0000000   | 0.10679940  | 0.1635854   | 0.1538900   | 0.16933632  | 0.13027723  | 0.146094177 |\n",
       "| Q3 | 0.268067373 | 0.1067994   | 1.00000000  | 0.3054275   | 0.1343392   | 0.13972092  | 0.18181699  | 0.023462872 |\n",
       "| Q4 | 0.125522005 | 0.1635854   | 0.30542746  | 1.0000000   | 0.1429560   | 0.11957737  | 0.15368558  | 0.155930112 |\n",
       "| Q5 | 0.140772832 | 0.1538900   | 0.13433921  | 0.1429560   | 1.0000000   | 0.43858367  | 0.35123652  | 0.207107742 |\n",
       "| Q6 | 0.089081679 | 0.1693363   | 0.13972092  | 0.1195774   | 0.4385837   | 1.00000000  | 0.39140203  | 0.155334384 |\n",
       "| Q7 | 0.070732428 | 0.1302772   | 0.18181699  | 0.1536856   | 0.3512365   | 0.39140203  | 1.00000000  | 0.272037710 |\n",
       "| Q8 | 0.004843475 | 0.1460942   | 0.02346287  | 0.1559301   | 0.2071077   | 0.15533438  | 0.27203771  | 1.000000000 |\n",
       "\n"
      ],
      "text/plain": [
       "   Q1          Q2        Q3         Q4        Q5        Q6         Q7        \n",
       "Q1 1.000000000 0.1772585 0.26806737 0.1255220 0.1407728 0.08908168 0.07073243\n",
       "Q2 0.177258519 1.0000000 0.10679940 0.1635854 0.1538900 0.16933632 0.13027723\n",
       "Q3 0.268067373 0.1067994 1.00000000 0.3054275 0.1343392 0.13972092 0.18181699\n",
       "Q4 0.125522005 0.1635854 0.30542746 1.0000000 0.1429560 0.11957737 0.15368558\n",
       "Q5 0.140772832 0.1538900 0.13433921 0.1429560 1.0000000 0.43858367 0.35123652\n",
       "Q6 0.089081679 0.1693363 0.13972092 0.1195774 0.4385837 1.00000000 0.39140203\n",
       "Q7 0.070732428 0.1302772 0.18181699 0.1536856 0.3512365 0.39140203 1.00000000\n",
       "Q8 0.004843475 0.1460942 0.02346287 0.1559301 0.2071077 0.15533438 0.27203771\n",
       "   Q8         \n",
       "Q1 0.004843475\n",
       "Q2 0.146094177\n",
       "Q3 0.023462872\n",
       "Q4 0.155930112\n",
       "Q5 0.207107742\n",
       "Q6 0.155334384\n",
       "Q7 0.272037710\n",
       "Q8 1.000000000"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "summary(x)\n",
    "cor(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Principal Component Analysis\n",
    "pca <-princomp(x, score=TRUE, cor=TRUE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "Loadings:\n",
       "   Comp.1 Comp.2 Comp.3 Comp.4 Comp.5 Comp.6 Comp.7 Comp.8\n",
       "Q1  0.239  0.515  0.314  0.340  0.565  0.199  0.304  0.108\n",
       "Q2  0.287  0.159 -0.280  0.751 -0.411 -0.250        -0.113\n",
       "Q3  0.309  0.524        -0.384        -0.420 -0.545       \n",
       "Q4  0.311  0.360 -0.459 -0.363 -0.336  0.438  0.354       \n",
       "Q5  0.444 -0.248  0.287                0.496 -0.339 -0.544\n",
       "Q6  0.438 -0.284  0.350        -0.270                0.728\n",
       "Q7  0.440 -0.275        -0.197  0.107 -0.529  0.543 -0.321\n",
       "Q8  0.294 -0.296 -0.630         0.560        -0.261  0.213\n",
       "\n",
       "               Comp.1 Comp.2 Comp.3 Comp.4 Comp.5 Comp.6 Comp.7 Comp.8\n",
       "SS loadings     1.000  1.000  1.000  1.000  1.000  1.000  1.000  1.000\n",
       "Proportion Var  0.125  0.125  0.125  0.125  0.125  0.125  0.125  0.125\n",
       "Cumulative Var  0.125  0.250  0.375  0.500  0.625  0.750  0.875  1.000"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Loading of Principal Components\n",
    "loadings(pca)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "Plot with title \"pca\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAAAMFBMVEUAAABNTU1oaGh8fHyM\njIyampqnp6eysrK9vb3Hx8fQ0NDZ2dnh4eHp6enw8PD////QFLu4AAAACXBIWXMAABJ0AAAS\ndAHeZh94AAAbBUlEQVR4nO3d2ULiShRA0QQQERn+/28vg3DBRobkhJxK1nroBlsrZaxtIAxd\nbYHWqr4nAEMgJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAgg\nJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAggJAgg\nJAggJAggJAggJAggJAggJAggJAggpGGqqts/2Y83z2M0hDRMt0P6rv28O2LHDtPtkP46TtGa\nHTtMQnozOzaBzed0t8RnXz/X5pOqmi4Pl3cfXk+q+eGjdVXP16dPubiyPX3mdrH7wo/1+erB\n8mN38WP587FKSh2xW/u3rn+W+PTy2r6e/dqfHD5++uj35ad8XwyyL/HwwXr9c/Xw4enP0LOt\nkDplt/Zvd8zYHYw2uzW/2F07VVXtjyLHS1//f7Tebn9d+VGdTX6u7v+anT86E1Kn7Nb+7W+/\n7f7aHBpY7PpYHaqaHP9putkePrr7e3NM7urKxSD17gi1rM8F7v5c7v5a7D71s7r8KB2wY/tX\nn+/FbA/HkP3FzeRzH9dPAPuP7nvaHo4sV1dOqp+sdu18bE/JfBwPctvt/PKjdMCO7d/n8SbX\n+YzAxT9V52ZO6l9XLj7zdGFyvnr68u36fP0N388o2bEJzE9drG+EdPr75NeV35+5vUzm/88Q\nUsfs2Aw2X8eza9O/QqovP1rfyuF88PkV0vmIVG+F1CE7NovDAz6H89XX95EO//hzz2n775WT\n6ufu0PJ8qvv4me4jvYcd27/J+Y5QfeOs3eFTvo7n5L4OB62rKyc/p8n3Z+0W5y+8ddZu8/bv\nbxSE1L/dcp+uD+cc9g/Cnh9H+r+Hy49+/77y49cZiJ8vnJ4/+nEaZf7W7200hJTA6WTD4QDz\n/euZDcdPWVYXH7268mN/9XzG4t9nNhxfPvFRXR3FiCOkDA73j6bHuzOHJ9JVs/Nz7banj07O\nH72+sj1/5tekqueb6y9cftTXj1J5RVInhDQQziP0y94fCCH1y94fCCH1y94fCCH1y94fCCH1\ny96HAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKC\nAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKC\nAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAEKCAD2G\nVFUqZih6W8uHiqTEQPQXUr+bh1B9reTq199QNCFBACFBAPeRIICzdhDA40gQwFqGAEKCAEKC\nAEKCAEKCAEKCAH2H1Pf2IUTfC7nv7UOI3hdy7xOAAL2v494nAAF6X8e9TwAC9L6Oe58ABOh/\nHfc/A2it/2Xc/wygtf6Xcf8zgNb6X8b9zwBaS7CME0wBWkqwihNMAVpKsIoTTAFayrCKM8wB\nWsmwiDPMAVrJsIgzzAFaybCIM8wBWkmxiFNMAlpIsYZTTAJaSLGGU0wCWkixhlNMAlrIsYZz\nzAIay7GEc8wCGsuxhHPMAhrLsYRzzAIaS7KEk0wDGkqygpNMAxpKsoKTTAMayrKCs8wDGsmy\ngLPMAxrJsoCzzAMaybKAs8wDGkmzgNNMBBpIs37TTAQaSLN+00wEGkizftNMBBrIs37zzARe\nlmf55pkJvCzP8s0zE3hZouWbaCrwokSrN9FU4EWJVm+iqcCLEq3eRFOBF2VavZnmAi/JtHgz\nzQVekmnxZpoLvCTT4s00F3hJqsWbajLwglRrN9Vk4AWp1m6qycALcq3dXLOBp+VaurlmA0/L\ntXRzzQaelmvp5poNPC3Z0k02HXhSspWbbDrwpGQrN9l04EnJVm6y6cCTsq3cbPOBp2RbuNnm\nA0/JtnCzzQeekm7hppsQPCHduk03IXhCunWbbkLwhHTrNt2E4An51m2+GcFD+ZZtvhnBQ/mW\nbb4ZwUP5lm2+GcFDCZdtwinBA81X7ffnrNqbzb8D57MVEiVqumo3k+p/0xRTgv40XbXzqv5a\nHS6tl3U1j5uQkChR01VbV6vz5VVVx0zmh5IoTtNFW1V/XWlPSBTHEQkCtLiPtFwfLoXfR1IS\n5Wm8ZqcXZ+0mm8gpCYnytHgcaX54HKmefQY/jiQkypNyzaacFNyRc83mnBX8KeeSzTkr+FPI\nkg1+HElIFKejkKpLPc0K3ucNS7bJJpREWYQEAYQEARqv2M1HVU2XP4PcHaXRJpREURq/sK8+\n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\n0ELKNLRpFzu0kDINbdrFDi2kTEObdrFDCynT0KZd7NBCyjS0aRc7tJAyDW3axQ4tpExDm3ax\nQwsp09CmXezQQso0tGkXO7RXEkEAIUEAIUEAIUEAIUEAIUEAIUEAIUEAIUEAIUEAIUEAIUEA\nIUEAIUEAIUEAIUGATkNafdTVx7LRly4eTazx2ItJVc/vvut/06E3H1X1sbr/OS12yfb7/j5p\nOvQz7yjfeNqr/T5ZdzD0M++E3/gHOa8frZF/5/P6Zp42P36nk7v78bbVo/8qoPHYxy+s7+yl\nxkPXh6+7W1KLXbLd1Hf3SdOhV0+E1Hjay8729qmjO/81V9Oh18cfZP3S13UY0mdV734bbD5f\nnNHeqn4QUuOxV9XHZn+8+4gfer4fdF7N7nxKi12y3c7u7pMWe+TejNuNva3r1XYzu/P/Z7Xa\nI/tQ//6vUBoP/XGY7/zOGrmhu5DWp2/g47UZbffrfHo/pOZjz47j/j1886HranN35Fa7ZLv9\nunvUaD70ovp88BnNx/46LMnN34eNVntkf5D++5dA86GrR2vk5he9to0XzE8/oM1ssf9rd99k\ncriwm+Dut8Tn4dA7P16f726SXk5q/uC7aDH2zxb+HL7t0PdvazQfe33/l0vzoRfV4u9hW479\ncf+Gbuu9Pav+vtHYfOifm9Cv/Yeu3YU0vd6Jx//hb7rfZPW5v7g8fGR+vj79/3NXj34dtBj7\nYPPPR6KGnt9blm3Gnlbre/uk+dCzavlx63dNxNiT3ZqtDzemO9gj+1uld6bdfOjPn5t2j47U\nV7oL6frH/lXtbi3v7vp87f9hutn9Hjz+We+vn//pr6+OHXv/W/jPczmthv6q7v53ui3G/txd\nvrdPmg89q6p/l2jQ2FU1u39CoN0P8t4Bqc3Qi/3ZhvrRgfrX5l767JdGvhp6dli6y/3Pqzrc\nQayq9c8nVT//NPv7q2PH3q7v3LRuNfRiVt/7PdZ87MMZgedDemXoar+CNveOpG3G3p9s+Ph7\nn7Ta26u7d35aDH04Qr12QHpbSBd34I4X///z5n27V0J6dexN/fSv31eH3t8teHZFvjL2ZH8G\n+fmQXp/2ppp0MPbxwYD132O3mvb879sVrYZe7G9WbO79IG9t7pVPfsnsfBt1uXl5Hz0Iqd3Y\n07/XTNuh756iaj72x2HJ3Nsnbad9b/DmY/+1sZhp339crfnQk8Mtxnu/Wm7oLqTP07Hxez+j\n2JDajL2eTO89rtBu2vdn3njs6qyoaT9+sKHNtB88ANZ86If539JdSOfz+NP9MXL2/w3Rf7+R\n78M/Xd3gvf9dtBh7ee9udauhj48j3bkd03zsxyG1n/YTj8i8PPbn4XPXf+/yNovkwXn7Nntk\n/+e9mxY3dBfS7vbI/pHl9ewwoauzJocNX3wjx3+6usH74NdB47Hv/FDbDn14KHwzu/fjbbVL\n7u+TFtOeH0423Lm/0WJvTzb7extffwzcao/MHjxI1WaPbH72y/M6DOnn1P3Pc50uz+Nvt9ff\nyOHfZv9/dPtg0bQY++PRr/YW064fnUdut0se7JOmQ2+O0767ahpP+/PhLmm+Ryb3Tn63Gnr6\ncNb/6jKk7ddsN53Tb6NF/f8jy9vrb2T3y+X4T8+H1HTsh7eR2kx7fvrcDsbePtwnTYfedDnt\n5fT+g70thn58H6bND/LBrP/RaUhPTqHDOXQ4tmm/c+z0Qwsp4dCmXd7QQko4tGmXN7SQEg5t\n2uUNnSAkKJ+QIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQ\nIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQ\nIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQ\nIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQIICQ\nIICQIICQIICQIICQIMB/XqgWAM3eBB8AAAAASUVORK5CYII=",
      "text/plain": [
       "Plot with title \"scree plot\""
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scree plot of eigenvalues\n",
    "plot(pca)\n",
    "screeplot(pca, type=\"line\", main=\"scree plot\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Scatter Diagram atau Diagram Tebar adalah salah satu alat dari QC Seven Tools (7 alat pengendalian Kualitas) yang berfungsi untuk melakukan pengujian terhadap seberapa kuatnya hubungan antara 2 (dua) variabel serta menentukan jenis hubungan dari 2 (dua) variabel tersebut apakah hubungan Positif, hubungan Negatif ataupun tidak ada hubungan sama sekali. Bentuk dari Scatter Diagram adalah gambaran grafis yang terdiri dari sekumpulan titik-titik (point)dari nilai sepasang variabel (Variabel X dan Variabel Y)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAMAAADKOT/pAAACtVBMVEUAAAABAQECAgIDAwME\nBAQFBQUGBgYHBwcICAgJCQkKCgoLCwsMDAwNDQ0ODg4PDw8QEBARERESEhITExMUFBQVFRUW\nFhYXFxcYGBgZGRkaGhobGxscHBwdHR0eHh4fHx8gICAhISEiIiIjIyMkJCQlJSUmJiYnJyco\nKCgpKSkqKiorKyssLCwtLS0uLi4vLy8wMDAxMTEyMjIzMzM0NDQ1NTU2NjY3Nzc4ODg5OTk6\nOjo7Ozs8PDw9PT0+Pj4/Pz9AQEBBQUFCQkJDQ0NERERFRUVGRkZHR0dISEhJSUlKSkpLS0tM\nTExNTU1OTk5PT09QUFBRUVFSUlJTU1NUVFRVVVVWVlZXV1dYWFhZWVlbW1tcXFxdXV1eXl5f\nX19gYGBhYWFiYmJjY2NlZWVmZmZnZ2doaGhpaWlqampra2tsbGxtbW1ubm5vb29wcHBxcXFy\ncnJzc3N0dHR1dXV2dnZ3d3d4eHh5eXl6enp7e3t8AAB8fHx9fX1+fn5/f3+AgICBgYGCgoKD\ng4OEhISFhYWGhoaHh4eIiIiJiYmKioqLi4uMAACMjIyNjY2Ojo6Pj4+QkJCRkZGSkpKTk5OU\nlJSXl5eYmJiZmZmampqbm5ucnJydnZ2enp6goKChoaGioqKjo6OlpaWnp6eoqKipqamqqqqs\nrKytra2vr6+xsbGysrK0tLS1tbW2tra3t7e4uLi5ubm7u7u9vb2+vr6/v7/AwMDBwcHCwsLE\nxMTGxsbHx8fIyMjMzMzNzc3Ozs7Pz8/QAADQ0NDU1NTV1dXZ2dnb29vc3NzhAADh4eHi4uLj\nxMTpW1vp6enw8PD6RET/AAD/SEj/TU3/VFT/aGj/fHz/jIz/mJj/mpr/nZ3/p6f/qqr/srL/\nt7f/vb3/xMT/x8f/0ND/1NT/2dn/4eH/6en/8PD///80WwCOAAAACXBIWXMAABJ0AAASdAHe\nZh94AAAgAElEQVR4nOy9jbMk11UneIYPg7E9xhrbja0x7Y9pPPSI1tBgmQahNubR7h6RC80K\nLZa0Mr2Nyosfu9K6QbuOtFdYPdAMkdZMb2t6ytvrNZvCH9SCGafNrvRAs1GtJ0V2RGVkKCSF\nQ+FwWIGk+3fsPefcr8zK+novX72seudnq+tWVubNm/Xur865554PUAKBYNeA/R6AQLAOECIJ\n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\nB/wfK4V7IMrqAKsAAAAASUVORK5CYII=",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Biplot of score variables\n",
    "biplot(pca)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Keterangan :\n",
    "Q1 : Pada saat ini, microsoft office merupakan aplikasi yang paling banyak digunakan di seluruh dunia\n",
    "Q2 : Tahukah bahwa Microsoft Office pernah merilis Office online\n",
    "Q3 : Microsoft Office merupakan yang paling berkualitas dibandingkan software office yang lainnya\n",
    "Q4 : Harga Office sofware 2019 versi Home and Students adalah Rp.1,45 juta,dengan harga begitu,setarakah dengan kualitasnya\n",
    "Q5 : Seberapa meningkatnya kemampuan Microsoft Office anda jika dibandingkan waktu SMA dan sekarang\n",
    "Q6 : Seberapa meningkatnya pengetahuan anda tentang membuat laporan setelah menggunakan Microsoft word\n",
    "Q7 : Seberapa efisienkah mengolah pembukuan dengan Microsoft Office dibandingkan dengan manual\n",
    "Q8 : Seberapa banyak program office selain Microsoft office\n",
    "\n",
    "Dari Grafik dapat disimpulkan bahwa :\n",
    "  •\tQ5, Q6, Q7 sangat berhubungan\n",
    "  •\tQ1 dan Q3 cukup berhubungan begitu juga dengan Q4 dan Q2\n",
    "  •\t,Q7 lumayan memiliki hubungan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<thead><tr><th scope=col>Comp.1</th><th scope=col>Comp.2</th><th scope=col>Comp.3</th><th scope=col>Comp.4</th><th scope=col>Comp.5</th><th scope=col>Comp.6</th><th scope=col>Comp.7</th><th scope=col>Comp.8</th></tr></thead>\n",
       "<tbody>\n",
       "\t<tr><td> 1.46277091</td><td>-0.9998299 </td><td> 0.17894400</td><td>-0.8333243 </td><td> 1.39824796</td><td>-0.56838596</td><td>-1.03592660</td><td> 1.92539532</td></tr>\n",
       "\t<tr><td>-1.44649183</td><td>-0.6078596 </td><td>-0.66492490</td><td>-0.4697579 </td><td> 0.82158299</td><td> 0.30083286</td><td>-1.06992010</td><td>-0.21460450</td></tr>\n",
       "\t<tr><td>-1.79020533</td><td>-0.2624404 </td><td> 0.07084102</td><td>-0.5133456 </td><td> 0.16761981</td><td> 0.26159970</td><td>-0.76543988</td><td>-0.46390056</td></tr>\n",
       "\t<tr><td>-1.27987102</td><td>-0.6287631 </td><td> 0.15939204</td><td>-0.8122511 </td><td> 0.06740932</td><td>-1.00572279</td><td> 0.37205406</td><td> 0.49013461</td></tr>\n",
       "\t<tr><td> 0.43148577</td><td> 1.6094779 </td><td> 1.66996376</td><td>-0.1442367 </td><td> 2.32779516</td><td> 3.05034333</td><td> 0.20585513</td><td>-1.19750058</td></tr>\n",
       "\t<tr><td>-0.61626548</td><td>-1.2968281 </td><td> 2.00229172</td><td>-0.5352643 </td><td> 1.37095071</td><td> 0.01238184</td><td>-0.53165568</td><td>-0.64328221</td></tr>\n",
       "\t<tr><td>-0.03760166</td><td>-1.0694874 </td><td>-1.77909967</td><td> 0.5290174 </td><td> 0.95296003</td><td>-0.78621917</td><td>-0.76378537</td><td>-0.58485725</td></tr>\n",
       "\t<tr><td> 0.29902785</td><td> 0.7432054 </td><td> 0.33529455</td><td>-1.3973168 </td><td> 0.19493500</td><td>-0.16046807</td><td> 0.05658512</td><td>-0.01718609</td></tr>\n",
       "\t<tr><td> 0.49548099</td><td>-0.4337848 </td><td> 0.71308408</td><td> 0.8205451 </td><td>-0.07576396</td><td>-0.01976720</td><td>-0.25601349</td><td>-0.88546501</td></tr>\n",
       "\t<tr><td>-1.32628726</td><td>-0.7382483 </td><td>-0.29597407</td><td>-0.5076599 </td><td>-0.56836287</td><td> 1.41850224</td><td> 0.38484364</td><td> 0.30710758</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "\\begin{tabular}{llllllll}\n",
       " Comp.1 & Comp.2 & Comp.3 & Comp.4 & Comp.5 & Comp.6 & Comp.7 & Comp.8\\\\\n",
       "\\hline\n",
       "\t  1.46277091 & -0.9998299  &  0.17894400 & -0.8333243  &  1.39824796 & -0.56838596 & -1.03592660 &  1.92539532\\\\\n",
       "\t -1.44649183 & -0.6078596  & -0.66492490 & -0.4697579  &  0.82158299 &  0.30083286 & -1.06992010 & -0.21460450\\\\\n",
       "\t -1.79020533 & -0.2624404  &  0.07084102 & -0.5133456  &  0.16761981 &  0.26159970 & -0.76543988 & -0.46390056\\\\\n",
       "\t -1.27987102 & -0.6287631  &  0.15939204 & -0.8122511  &  0.06740932 & -1.00572279 &  0.37205406 &  0.49013461\\\\\n",
       "\t  0.43148577 &  1.6094779  &  1.66996376 & -0.1442367  &  2.32779516 &  3.05034333 &  0.20585513 & -1.19750058\\\\\n",
       "\t -0.61626548 & -1.2968281  &  2.00229172 & -0.5352643  &  1.37095071 &  0.01238184 & -0.53165568 & -0.64328221\\\\\n",
       "\t -0.03760166 & -1.0694874  & -1.77909967 &  0.5290174  &  0.95296003 & -0.78621917 & -0.76378537 & -0.58485725\\\\\n",
       "\t  0.29902785 &  0.7432054  &  0.33529455 & -1.3973168  &  0.19493500 & -0.16046807 &  0.05658512 & -0.01718609\\\\\n",
       "\t  0.49548099 & -0.4337848  &  0.71308408 &  0.8205451  & -0.07576396 & -0.01976720 & -0.25601349 & -0.88546501\\\\\n",
       "\t -1.32628726 & -0.7382483  & -0.29597407 & -0.5076599  & -0.56836287 &  1.41850224 &  0.38484364 &  0.30710758\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "| Comp.1 | Comp.2 | Comp.3 | Comp.4 | Comp.5 | Comp.6 | Comp.7 | Comp.8 |\n",
       "|---|---|---|---|---|---|---|---|\n",
       "|  1.46277091 | -0.9998299  |  0.17894400 | -0.8333243  |  1.39824796 | -0.56838596 | -1.03592660 |  1.92539532 |\n",
       "| -1.44649183 | -0.6078596  | -0.66492490 | -0.4697579  |  0.82158299 |  0.30083286 | -1.06992010 | -0.21460450 |\n",
       "| -1.79020533 | -0.2624404  |  0.07084102 | -0.5133456  |  0.16761981 |  0.26159970 | -0.76543988 | -0.46390056 |\n",
       "| -1.27987102 | -0.6287631  |  0.15939204 | -0.8122511  |  0.06740932 | -1.00572279 |  0.37205406 |  0.49013461 |\n",
       "|  0.43148577 |  1.6094779  |  1.66996376 | -0.1442367  |  2.32779516 |  3.05034333 |  0.20585513 | -1.19750058 |\n",
       "| -0.61626548 | -1.2968281  |  2.00229172 | -0.5352643  |  1.37095071 |  0.01238184 | -0.53165568 | -0.64328221 |\n",
       "| -0.03760166 | -1.0694874  | -1.77909967 |  0.5290174  |  0.95296003 | -0.78621917 | -0.76378537 | -0.58485725 |\n",
       "|  0.29902785 |  0.7432054  |  0.33529455 | -1.3973168  |  0.19493500 | -0.16046807 |  0.05658512 | -0.01718609 |\n",
       "|  0.49548099 | -0.4337848  |  0.71308408 |  0.8205451  | -0.07576396 | -0.01976720 | -0.25601349 | -0.88546501 |\n",
       "| -1.32628726 | -0.7382483  | -0.29597407 | -0.5076599  | -0.56836287 |  1.41850224 |  0.38484364 |  0.30710758 |\n",
       "\n"
      ],
      "text/plain": [
       "      Comp.1      Comp.2     Comp.3      Comp.4     Comp.5      Comp.6     \n",
       " [1,]  1.46277091 -0.9998299  0.17894400 -0.8333243  1.39824796 -0.56838596\n",
       " [2,] -1.44649183 -0.6078596 -0.66492490 -0.4697579  0.82158299  0.30083286\n",
       " [3,] -1.79020533 -0.2624404  0.07084102 -0.5133456  0.16761981  0.26159970\n",
       " [4,] -1.27987102 -0.6287631  0.15939204 -0.8122511  0.06740932 -1.00572279\n",
       " [5,]  0.43148577  1.6094779  1.66996376 -0.1442367  2.32779516  3.05034333\n",
       " [6,] -0.61626548 -1.2968281  2.00229172 -0.5352643  1.37095071  0.01238184\n",
       " [7,] -0.03760166 -1.0694874 -1.77909967  0.5290174  0.95296003 -0.78621917\n",
       " [8,]  0.29902785  0.7432054  0.33529455 -1.3973168  0.19493500 -0.16046807\n",
       " [9,]  0.49548099 -0.4337848  0.71308408  0.8205451 -0.07576396 -0.01976720\n",
       "[10,] -1.32628726 -0.7382483 -0.29597407 -0.5076599 -0.56836287  1.41850224\n",
       "      Comp.7      Comp.8     \n",
       " [1,] -1.03592660  1.92539532\n",
       " [2,] -1.06992010 -0.21460450\n",
       " [3,] -0.76543988 -0.46390056\n",
       " [4,]  0.37205406  0.49013461\n",
       " [5,]  0.20585513 -1.19750058\n",
       " [6,] -0.53165568 -0.64328221\n",
       " [7,] -0.76378537 -0.58485725\n",
       " [8,]  0.05658512 -0.01718609\n",
       " [9,] -0.25601349 -0.88546501\n",
       "[10,]  0.38484364  0.30710758"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Scores of the components\n",
    "pca$scores[1:10,]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
